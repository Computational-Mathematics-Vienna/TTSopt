%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%% readMIPLIB.m %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% 
% is used if a new MIPLIB library is available and new .mat files
% have to be created; it reads the mps files downloaded from 
%              https://miplib.zib.de/
% and creates the struct S that will be saved in the DotMat folder.
% This is only possible with Matlab, not with Octave!!!
% with mpsread (Matlab built_in function, not available in Octave)
% you get the following information of the problem:
% problem = 
%
% f:	Vector representing objective f'*x
% intcon: Vector indicating variables that take integer values 
	  (empty for LP, nonempty for MILP)
% Aineq: Matrix in linear inequality constraints 
	 Aineq*x ≤ bineq
% bineq: Vector in linear inequality constraints Aineq*x ≤ bineq
% Aeq:	Matrix in linear equality constraints Aeq*x = beq
% beq:	Vector in linear equality constraints Aeq*x = beq
% lb:	Vector of lower bounds
% ub:	Vector of upper bounds
% solver: 'intlinprog' (if intcon is nonempty), or 'linprog' 
	(if intcon is empty)
% options: Default options, as returned by the command 
	   optimoptions(solver)
% variableNames: String array containing variable names from the 
		 MPS file. 
                 This field appears only if ReturnNames is true.
% constraintNames: Structure containing constraint names from the 
		   MPS file. 
                   For a description, see ReturnNames. This field 
                   appears only if ReturnNames is true.

% written by Roman Kostal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%% readSolText.m %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% reads the text files of every solution in the solution folder.
% In the current version of solutions there are no text files.
% Therefore this function is not used.

% wrote by Roman Kostal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%% wrapperMIPLIB.m %%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% this is the main function to get the information of the
% downloaded MIPLIB solutions and to save the created structure S
% into the DotMat folder

% written by Roman Kostal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%% writeGoodHits.m %%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% writes the solution values to S.hits (only for problems with good 
% solutions)
%
% written by Roman Kostal
