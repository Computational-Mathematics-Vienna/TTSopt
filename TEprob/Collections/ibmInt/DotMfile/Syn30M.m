% MATLAB - BARON Interface [J.Currie I2C2]
% Interface Version: v1.39 [22/05/12]
% File Generated: 22-May-2012 11:10:47
% Model: Syn30M

% Objective
fun = @(x)-x(1)+5*x(7)-2*x(12)-10*x(29)-5*x(30)+40*x(37)+15*x(38)+10*x(39)+30*x(40)+35*x(41)+20*x(42)+25*x(43)+15*x(44)+30*x(52)-x(57)+80*x(65)+285*x(66)+290*x(67)+280*x(68)+290*x(69)+350*x(70)-5*x(71)-8*x(72)-6*x(73)-10*x(74)-6*x(75)-7*x(76)-4*x(77)-5*x(78)-2*x(79)-4*x(80)-3*x(81)-7*x(82)-3*x(83)-2*x(84)-4*x(85)-2*x(86)-3*x(87)-5*x(88)-2*x(89)-x(90)-2*x(91)-9*x(92)-5*x(93)-2*x(94)-10*x(95)-4*x(96)-7*x(97)-4*x(98)-2*x(99)-8*x(100);

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [40,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,30,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,20,20,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,30,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(1)-x(2)-x(3);
             -x(4)-x(5)+x(6);
             x(6)-x(7)-x(8);
             x(8)-x(9)-x(10)-x(11);
             x(13)-x(16)-x(17);
             x(15)-x(18)-x(19)-x(20);
             x(23)-x(27)-x(28);
             -x(24)-x(30)+x(31);
             x(25)-x(32)-x(33);
             x(26)-x(34)-x(35)-x(36);
             x(45)-x(46);
             x(46)-x(47)-x(48);
             -x(49)-x(50)+x(51);
             x(51)-x(52)-x(53);
             x(53)-x(54)-x(55)-x(56);
             x(58)-x(61)-x(62);
             x(60)-x(63)-x(64)-x(65);
             -log(1+x(2))+x(4)+x(71);
             x(2)-40*x(71);
             x(4)-3.71357206670431*x(71);
             -1.2*log(1+x(3))+x(5)+x(72);
             x(3)-40*x(72);
             x(5)-4.45628648004517*x(72);
             -0.75*x(9)+x(13)+x(73);
             -0.75*x(9)+x(13)-x(73);
             x(9)-4.45628648004517*x(73);
             x(13)-3.34221486003388*x(73);
             -1.5*log(1+x(10))+x(14)+x(74);
             x(10)-4.45628648004517*x(74);
             x(14)-2.54515263975353*x(74);
             -x(11)+x(15)+x(75);
             -x(11)+x(15)-x(75);
             -0.5*x(12)+x(15)+x(75);
             -0.5*x(12)+x(15)-x(75);
             x(11)-4.45628648004517*x(75);
             x(12)-30*x(75);
             x(15)-15*x(75);
             -1.25*log(1+x(16))+x(21)+x(76);
             x(16)-3.34221486003388*x(76);
             x(21)-1.83548069293539*x(76);
             -0.9*log(1+x(17))+x(22)+x(77);
             x(17)-3.34221486003388*x(77);
             x(22)-1.32154609891348*x(77);
             -log(1+x(14))+x(23)+x(78);
             x(14)-2.54515263975353*x(78);
             x(23)-1.26558121681553*x(78);
             -0.9*x(18)+x(24)+x(79);
             -0.9*x(18)+x(24)-x(79);
             x(18)-15*x(79);
             x(24)-13.5*x(79);
             -0.6*x(19)+x(25)+x(80);
             -0.6*x(19)+x(25)-x(80);
             x(19)-15*x(80);
             x(25)-9*x(80);
             -1.1*log(1+x(20))+x(26)+x(81);
             x(20)-15*x(81);
             x(26)-3.04984759446376*x(81);
             -0.9*x(21)+x(37)+x(82);
             -0.9*x(21)+x(37)-x(82);
             -x(29)+x(37)+x(82);
             -x(29)+x(37)-x(82);
             x(21)-1.83548069293539*x(82);
             x(29)-20*x(82);
             x(37)-20*x(82);
             -log(1+x(22))+x(38)+x(83);
             x(22)-1.32154609891348*x(83);
             x(38)-0.842233385663186*x(83);
             -0.7*log(1+x(27))+x(39)+x(84);
             x(27)-1.26558121681553*x(84);
             x(39)-0.572481933717686*x(84);
             -0.65*log(1+x(28))+x(40)+x(85);
             -0.65*log(1+x(31))+x(40)+x(85);
             x(28)-1.26558121681553*x(85);
             x(31)-33.5*x(85);
             x(40)-2.30162356062425*x(85);
             -x(32)+x(41)+x(86);
             -x(32)+x(41)-x(86);
             x(32)-9*x(86);
             x(41)-9*x(86);
             -x(33)+x(42)+x(87);
             -x(33)+x(42)-x(87);
             x(33)-9*x(87);
             x(42)-9*x(87);
             -0.75*log(1+x(34))+x(43)+x(88);
             x(34)-3.04984759446376*x(88);
             x(43)-1.04900943706034*x(88);
             -0.8*log(1+x(35))+x(44)+x(89);
             x(35)-3.04984759446376*x(89);
             x(44)-1.11894339953103*x(89);
             -0.85*log(1+x(36))+x(45)+x(90);
             x(36)-3.04984759446376*x(90);
             x(45)-1.18887736200171*x(90);
             -log(1+x(47))+x(49)+x(91);
             x(47)-1.18887736200171*x(91);
             x(49)-0.78338879230327*x(91);
             -1.2*log(1+x(48))+x(50)+x(92);
             x(48)-1.18887736200171*x(92);
             x(50)-0.940066550763924*x(92);
             -0.75*x(54)+x(58)+x(93);
             -0.75*x(54)+x(58)-x(93);
             x(54)-0.940066550763924*x(93);
             x(58)-0.705049913072943*x(93);
             -1.5*log(1+x(55))+x(59)+x(94);
             x(55)-0.940066550763924*x(94);
             x(59)-0.994083415506506*x(94);
             -x(56)+x(60)+x(95);
             -x(56)+x(60)-x(95);
             -0.5*x(57)+x(60)+x(95);
             -0.5*x(57)+x(60)-x(95);
             x(56)-0.940066550763924*x(95);
             x(57)-30*x(95);
             x(60)-15*x(95);
             -1.25*log(1+x(61))+x(66)+x(96);
             x(61)-0.705049913072943*x(96);
             x(66)-0.666992981045719*x(96);
             -0.9*log(1+x(62))+x(67)+x(97);
             x(62)-0.705049913072943*x(97);
             x(67)-0.480234946352917*x(97);
             -log(1+x(59))+x(68)+x(98);
             x(59)-0.994083415506506*x(98);
             x(68)-0.690184503917672*x(98);
             -0.9*x(63)+x(69)+x(99);
             -0.9*x(63)+x(69)-x(99);
             x(63)-15*x(99);
             x(69)-13.5*x(99);
             -0.6*x(64)+x(70)+x(100);
             -0.6*x(64)+x(70)-x(100);
             x(64)-15*x(100);
             x(70)-9*x(100);
             x(71)+x(72);
             -x(73)+x(76)+x(77);
             -x(76)+x(82);
             -x(77)+x(83);
             -x(74)+x(78);
             -x(78)+x(84)+x(85);
             -x(75)+x(79)+x(80)+x(81);
             -x(79)+x(85);
             -x(80)+x(86)+x(87);
             -x(81)+x(88)+x(89)+x(90);
             x(71)+x(72)-x(73);
             x(71)+x(72)-x(74);
             x(71)+x(72)-x(75);
             x(73)-x(76);
             x(73)-x(77);
             x(74)-x(78);
             x(75)-x(79);
             x(75)-x(80);
             x(75)-x(81);
             x(76)-x(82);
             x(77)-x(83);
             x(78)-x(84);
             x(78)-x(85);
             x(80)-x(86);
             x(80)-x(87);
             x(81)-x(88);
             x(81)-x(89);
             x(81)-x(90);
             -x(90)+x(91)+x(92);
             -x(93)+x(96)+x(97);
             -x(94)+x(98);
             x(90)-x(91);
             x(90)-x(92);
             x(93)-x(96);
             x(93)-x(97);
             x(94)-x(98);
             x(95)-x(99);
             x(95)-x(100)];
cl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1,-Inf,-1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1,-Inf,-Inf,-Inf,-1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1,-Inf,-1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1,-Inf,-Inf,-Inf,-1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1,-Inf,-1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1,-Inf,-Inf,-Inf,-1,-Inf,-Inf,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
cu = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,Inf,0,0,1,0,0,1,Inf,1,Inf,0,0,0,1,0,0,1,0,0,1,0,0,1,Inf,0,0,1,Inf,0,0,1,0,0,1,Inf,1,Inf,0,0,0,1,0,0,1,0,0,1,1,0,0,0,1,Inf,0,0,1,Inf,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,Inf,0,0,1,0,0,1,Inf,1,Inf,0,0,0,1,0,0,1,0,0,1,0,0,1,Inf,0,0,1,Inf,0,0,1,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','Syn30M');
opts.sense = 'max';
