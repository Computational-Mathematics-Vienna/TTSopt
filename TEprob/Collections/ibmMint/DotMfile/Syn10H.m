% MATLAB - BARON Interface [J.Currie I2C2]
% Interface Version: v1.39 [22/05/12]
% File Generated: 22-May-2012 11:09:54
% Model: Syn10H

% Objective
fun = @(x)5*x(7)-2*x(12)+200*x(20)+250*x(21)+200*x(22)+200*x(23)+500*x(24)+350*x(25)-5*x(68)-8*x(69)-6*x(70)-10*x(71)-6*x(72)-7*x(73)-4*x(74)-5*x(75)-2*x(76)-4*x(77);

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [10,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,7,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(1)-x(2)-x(3);
             -x(4)-x(5)+x(6);
             x(6)-x(7)-x(8);
             x(8)-x(9)-x(10)-x(11);
             x(13)-x(16)-x(17);
             x(15)-x(18)-x(19)-x(20);
             (x(30)/(1e-6+x(68))-log(1+x(26)/(1e-6+x(68))))*(1e-6+x(68));
             x(27);
             x(31);
             x(2)-x(26)-x(27);
             x(4)-x(30)-x(31);
             x(26)-10*x(68);
             x(27)+10*x(68);
             x(30)-2.39789527279837*x(68);
             x(31)+2.39789527279837*x(68);
             (x(32)/(1e-6+x(69))-1.2*log(1+x(28)/(1e-6+x(69))))*(1e-6+x(69));
             x(29);
             x(33);
             x(3)-x(28)-x(29);
             x(5)-x(32)-x(33);
             x(28)-10*x(69);
             x(29)+10*x(69);
             x(32)-2.87747432735804*x(69);
             x(33)+2.87747432735804*x(69);
             -0.75*x(34)+x(42);
             x(35);
             x(43);
             x(9)-x(34)-x(35);
             x(13)-x(42)-x(43);
             x(34)-2.87747432735804*x(70);
             x(35)+2.87747432735804*x(70);
             x(42)-2.15810574551853*x(70);
             x(43)+2.15810574551853*x(70);
             (x(44)/(1e-6+x(71))-1.5*log(1+x(36)/(1e-6+x(71))))*(1e-6+x(71));
             x(37);
             x(46);
             x(10)-x(36)-x(37);
             x(14)-x(44)-x(46);
             x(36)-2.87747432735804*x(71);
             x(37)+2.87747432735804*x(71);
             x(44)-2.03277599268042*x(71);
             x(46)+2.03277599268042*x(71);
             -x(38)+x(48);
             -0.5*x(40)+x(48);
             x(39);
             x(41);
             x(49);
             x(11)-x(38)-x(39);
             x(12)-x(40)-x(41);
             x(15)-x(48)-x(49);
             x(38)-2.87747432735804*x(72);
             x(39)+2.87747432735804*x(72);
             x(40)-7*x(72);
             x(41)+7*x(72);
             x(48)-3.5*x(72);
             x(49)+3.5*x(72);
             (x(58)/(1e-6+x(73))-1.25*log(1+x(50)/(1e-6+x(73))))*(1e-6+x(73));
             x(51);
             x(59);
             x(16)-x(50)-x(51);
             x(21)-x(58)-x(59);
             x(50)-2.15810574551853*x(73);
             x(51)+2.15810574551853*x(73);
             x(58)-1.43746550029693*x(73);
             x(59)+1.43746550029693*x(73);
             (x(60)/(1e-6+x(74))-0.9*log(1+x(52)/(1e-6+x(74))))*(1e-6+x(74));
             x(53);
             x(61);
             x(17)-x(52)-x(53);
             x(22)-x(60)-x(61);
             x(52)-2.15810574551853*x(74);
             x(53)+2.15810574551853*x(74);
             x(60)-1.03497516021379*x(74);
             x(61)+1.03497516021379*x(74);
             (x(62)/(1e-6+x(75))-log(1+x(45)/(1e-6+x(75))))*(1e-6+x(75));
             x(47);
             x(63);
             x(14)-x(45)-x(47);
             x(23)-x(62)-x(63);
             x(45)-2.03277599268042*x(75);
             x(47)+2.03277599268042*x(75);
             x(62)-1.10947836929589*x(75);
             x(63)+1.10947836929589*x(75);
             -0.9*x(54)+x(64);
             x(55);
             x(65);
             x(18)-x(54)-x(55);
             x(24)-x(64)-x(65);
             x(54)-3.5*x(76);
             x(55)+3.5*x(76);
             x(64)-3.15*x(76);
             x(65)+3.15*x(76);
             -0.6*x(56)+x(66);
             x(57);
             x(67);
             x(19)-x(56)-x(57);
             x(25)-x(66)-x(67);
             x(56)-3.5*x(77);
             x(57)+3.5*x(77);
             x(66)-2.1*x(77);
             x(67)+2.1*x(77);
             x(68)+x(69);
             -x(70)+x(73)+x(74);
             -x(71)+x(75);
             x(68)+x(69)-x(70);
             x(68)+x(69)-x(71);
             x(68)+x(69)-x(72);
             x(70)-x(73);
             x(70)-x(74);
             x(71)-x(75);
             x(72)-x(76);
             x(72)-x(77)];
cl = [0,0,0,0,0,0,-Inf,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,1,0,0,0,0,0,0,0,0,0,0]';
cu = [0,0,0,0,0,0,0,0,0,0,0,0,10,0,2.39789527279837,0,0,0,0,0,0,10,0,2.87747432735804,0,0,0,0,0,0,2.87747432735804,0,2.15810574551853,0,0,0,0,0,0,2.87747432735804,0,2.03277599268042,0,0,0,0,0,0,0,0,0,2.87747432735804,0,7,0,3.5,0,0,0,0,0,0,2.15810574551853,0,1.43746550029693,0,0,0,0,0,0,2.15810574551853,0,1.03497516021379,0,0,0,0,0,0,2.03277599268042,0,1.10947836929589,0,0,0,0,0,0,3.5,0,3.15,0,0,0,0,0,0,3.5,0,2.1,1,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCBBBBBBBBBB';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','Syn10H');
opts.sense = 'max';
