% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 07-Jan-2016 10:25:50
% Model: inf_minlp_219

% Objective
fun = @(x)20*x(21)+20*x(22)+20*x(23)+40*x(59)+50*x(60)+30*x(61);

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(4);
             x(5);
             x(6);
             x(7);
             x(8);
             x(9);
             x(10);
             x(11);
             x(12);
             x(13);
             x(14);
             x(15);
             x(16);
             x(17);
             x(18);
             x(19);
             x(20);
             x(4);
             x(5);
             x(6);
             x(7);
             x(8);
             x(9);
             x(10);
             x(11);
             x(12);
             x(13);
             x(14);
             x(15);
             x(16);
             x(17);
             x(18);
             x(19);
             x(20);
             x(1);
             x(2);
             x(3);
             x(59)+x(62);
             x(60)+x(89);
             x(61)+x(73);
             x(59)+x(62);
             x(63)+x(65);
             x(64)+x(66);
             x(63)+x(65);
             x(64)+x(66);
             x(67)+x(69);
             x(68)+x(77);
             x(67)+x(69);
             x(70)+x(72);
             x(71)+x(74);
             x(70)+x(72);
             x(61)+x(73);
             x(71)+x(74);
             x(75)+x(76);
             x(75)+x(76);
             x(68)+x(77);
             x(78)+x(81);
             x(79)+x(85);
             x(80)+x(94);
             x(78)+x(81);
             x(82)+x(84);
             x(83)+x(86);
             x(82)+x(84);
             x(79)+x(85);
             x(83)+x(86);
             x(87)+x(90);
             x(88)+x(92);
             x(60)+x(89);
             x(87)+x(90);
             x(91)+x(93);
             x(88)+x(92);
             x(91)+x(93);
             x(80)+x(94);
             x(95)+x(96);
             x(95)+x(96);
             x(21)-100000000*x(59);
             x(22)-100000000*x(60);
             x(23)-100000000*x(61);
             x(24)-100000000*x(62);
             x(25)-100000000*x(63);
             x(26)-100000000*x(64);
             x(27)-100000000*x(65);
             x(28)-100000000*x(66);
             x(29)-100000000*x(67);
             x(30)-100000000*x(68);
             x(31)-100000000*x(69);
             x(32)-100000000*x(70);
             x(33)-100000000*x(71);
             x(34)-100000000*x(72);
             x(35)-100000000*x(73);
             x(36)-100000000*x(74);
             x(37)-100000000*x(75);
             x(38)-100000000*x(76);
             x(39)-100000000*x(77);
             x(40)-100000000*x(78);
             x(41)-100000000*x(79);
             x(42)-100000000*x(80);
             x(43)-100000000*x(81);
             x(44)-100000000*x(82);
             x(45)-100000000*x(83);
             x(46)-100000000*x(84);
             x(47)-100000000*x(85);
             x(48)-100000000*x(86);
             x(49)-100000000*x(87);
             x(50)-100000000*x(88);
             x(51)-100000000*x(89);
             x(52)-100000000*x(90);
             x(53)-100000000*x(91);
             x(54)-100000000*x(92);
             x(55)-100000000*x(93);
             x(56)-100000000*x(94);
             x(57)-100000000*x(95);
             x(58)-100000000*x(96);
             -100000000*x(21)+x(59);
             -100000000*x(22)+x(60);
             -100000000*x(23)+x(61);
             -100000000*x(24)+x(62);
             -100000000*x(25)+x(63);
             -100000000*x(26)+x(64);
             -100000000*x(27)+x(65);
             -100000000*x(28)+x(66);
             -100000000*x(29)+x(67);
             -100000000*x(30)+x(68);
             -100000000*x(31)+x(69);
             -100000000*x(32)+x(70);
             -100000000*x(33)+x(71);
             -100000000*x(34)+x(72);
             -100000000*x(35)+x(73);
             -100000000*x(36)+x(74);
             -100000000*x(37)+x(75);
             -100000000*x(38)+x(76);
             -100000000*x(39)+x(77);
             -100000000*x(40)+x(78);
             -100000000*x(41)+x(79);
             -100000000*x(42)+x(80);
             -100000000*x(43)+x(81);
             -100000000*x(44)+x(82);
             -100000000*x(45)+x(83);
             -100000000*x(46)+x(84);
             -100000000*x(47)+x(85);
             -100000000*x(48)+x(86);
             -100000000*x(49)+x(87);
             -100000000*x(50)+x(88);
             -100000000*x(51)+x(89);
             -100000000*x(52)+x(90);
             -100000000*x(53)+x(91);
             -100000000*x(54)+x(92);
             -100000000*x(55)+x(93);
             -100000000*x(56)+x(94);
             -100000000*x(57)+x(95);
             -100000000*x(58)+x(96);
             x(1)-x(4)-100000000*x(59);
             x(2)-x(16)-100000000*x(60);
             x(3)-x(9)-100000000*x(61);
             -x(1)+x(4)-100000000*x(62);
             x(4)-x(5)-100000000*x(63);
             x(4)-x(6)-100000000*x(64);
             -x(4)+x(5)-100000000*x(65);
             -x(4)+x(6)-100000000*x(66);
             x(6)-x(7)-100000000*x(67);
             x(6)-x(11)-100000000*x(68);
             -x(6)+x(7)-100000000*x(69);
             x(7)-x(8)-100000000*x(70);
             x(7)-x(9)-100000000*x(71);
             -x(7)+x(8)-100000000*x(72);
             -x(3)+x(9)-100000000*x(73);
             -x(7)+x(9)-100000000*x(74);
             x(9)-x(10)-100000000*x(75);
             -x(9)+x(10)-100000000*x(76);
             -x(6)+x(11)-100000000*x(77);
             x(11)-x(12)-100000000*x(78);
             x(11)-x(14)-100000000*x(79);
             x(11)-x(19)-100000000*x(80);
             -x(11)+x(12)-100000000*x(81);
             x(12)-x(13)-100000000*x(82);
             x(12)-x(15)-100000000*x(83);
             -x(12)+x(13)-100000000*x(84);
             -x(11)+x(14)-100000000*x(85);
             -x(12)+x(15)-100000000*x(86);
             x(15)-x(16)-100000000*x(87);
             x(15)-x(17)-100000000*x(88);
             -x(2)+x(16)-100000000*x(89);
             -x(15)+x(16)-100000000*x(90);
             x(16)-x(18)-100000000*x(91);
             -x(15)+x(17)-100000000*x(92);
             -x(16)+x(18)-100000000*x(93);
             -x(11)+x(19)-100000000*x(94);
             x(19)-x(20)-100000000*x(95);
             -x(19)+x(20)-100000000*x(96);
             -x(1)+x(4)+100000000*x(59);
             -x(2)+x(16)+100000000*x(60);
             -x(3)+x(9)+100000000*x(61);
             x(1)-x(4)+100000000*x(62);
             -x(4)+x(5)+100000000*x(63);
             -x(4)+x(6)+100000000*x(64);
             x(4)-x(5)+100000000*x(65);
             x(4)-x(6)+100000000*x(66);
             -x(6)+x(7)+100000000*x(67);
             -x(6)+x(11)+100000000*x(68);
             x(6)-x(7)+100000000*x(69);
             -x(7)+x(8)+100000000*x(70);
             -x(7)+x(9)+100000000*x(71);
             x(7)-x(8)+100000000*x(72);
             x(3)-x(9)+100000000*x(73);
             x(7)-x(9)+100000000*x(74);
             -x(9)+x(10)+100000000*x(75);
             x(9)-x(10)+100000000*x(76);
             x(6)-x(11)+100000000*x(77);
             -x(11)+x(12)+100000000*x(78);
             -x(11)+x(14)+100000000*x(79);
             -x(11)+x(19)+100000000*x(80);
             x(11)-x(12)+100000000*x(81);
             -x(12)+x(13)+100000000*x(82);
             -x(12)+x(15)+100000000*x(83);
             x(12)-x(13)+100000000*x(84);
             x(11)-x(14)+100000000*x(85);
             x(12)-x(15)+100000000*x(86);
             -x(15)+x(16)+100000000*x(87);
             -x(15)+x(17)+100000000*x(88);
             x(2)-x(16)+100000000*x(89);
             x(15)-x(16)+100000000*x(90);
             -x(16)+x(18)+100000000*x(91);
             x(15)-x(17)+100000000*x(92);
             x(16)-x(18)+100000000*x(93);
             x(11)-x(19)+100000000*x(94);
             -x(19)+x(20)+100000000*x(95);
             x(19)-x(20)+100000000*x(96);
             x(25)-x(27);
             x(32)-x(34);
             x(37)-x(38);
             x(44)-x(46);
             x(41)-x(47);
             x(50)-x(54);
             x(53)-x(55);
             x(42)-x(56)-x(57)+x(58);
             x(57)-x(58);
             x(21)-x(24)-x(25)-x(26)+x(27)+x(28);
             x(26)-x(28)-x(29)-x(30)+x(31)+x(39);
             x(29)-x(31)-x(32)-x(33)+x(34)+x(36);
             x(23)+x(33)-x(35)-x(36)-x(37)+x(38);
             x(30)-x(39)-x(40)-x(41)-x(42)+x(43)+x(47)+x(56);
             x(40)-x(43)-x(44)-x(45)+x(46)+x(48);
             x(45)-x(48)-x(49)-x(50)+x(52)+x(54);
             x(22)+x(49)-x(51)-x(52)-x(53)+x(55);
             x(21);
             x(22);
             x(23);
             x(21);
             x(22);
             x(23);
             (x(1)*x(1)-x(4)*x(4))*x(59)-2.49149e-7*x(21)*x(21);
             (x(2)*x(2)-x(16)*x(16))*x(60)-2.49149e-7*x(22)*x(22);
             (x(3)*x(3)-x(9)*x(9))*x(61)-2.49149e-7*x(23)*x(23);
             (x(4)*x(4)-x(1)*x(1))*x(62)-2.49149e-7*x(24)*x(24);
             (x(4)*x(4)-x(5)*x(5))*x(63)-2.49149e-7*x(25)*x(25);
             (x(4)*x(4)-x(6)*x(6))*x(64)-2.49149e-7*x(26)*x(26);
             (x(5)*x(5)-x(4)*x(4))*x(65)-2.49149e-7*x(27)*x(27);
             (x(6)*x(6)-x(4)*x(4))*x(66)-2.49149e-7*x(28)*x(28);
             (x(6)*x(6)-x(7)*x(7))*x(67)-2.49149e-7*x(29)*x(29);
             (x(6)*x(6)-x(11)*x(11))*x(68)-2.49149e-7*x(30)*x(30);
             (x(7)*x(7)-x(6)*x(6))*x(69)-2.49149e-7*x(31)*x(31);
             (x(7)*x(7)-x(8)*x(8))*x(70)-2.49149e-7*x(32)*x(32);
             (x(7)*x(7)-x(9)*x(9))*x(71)-2.49149e-7*x(33)*x(33);
             (x(8)*x(8)-x(7)*x(7))*x(72)-2.49149e-7*x(34)*x(34);
             (x(9)*x(9)-x(3)*x(3))*x(73)-2.49149e-7*x(35)*x(35);
             (x(9)*x(9)-x(7)*x(7))*x(74)-2.49149e-7*x(36)*x(36);
             (x(9)*x(9)-x(10)*x(10))*x(75)-2.49149e-7*x(37)*x(37);
             (x(10)*x(10)-x(9)*x(9))*x(76)-2.49149e-7*x(38)*x(38);
             (x(11)*x(11)-x(6)*x(6))*x(77)-2.49149e-7*x(39)*x(39);
             (x(11)*x(11)-x(12)*x(12))*x(78)-2.49149e-7*x(40)*x(40);
             (x(11)*x(11)-x(14)*x(14))*x(79)-2.49149e-7*x(41)*x(41);
             (x(11)*x(11)-x(19)*x(19))*x(80)-2.49149e-7*x(42)*x(42);
             (x(12)*x(12)-x(11)*x(11))*x(81)-2.49149e-7*x(43)*x(43);
             (x(12)*x(12)-x(13)*x(13))*x(82)-2.49149e-7*x(44)*x(44);
             (x(12)*x(12)-x(15)*x(15))*x(83)-2.49149e-7*x(45)*x(45);
             (x(13)*x(13)-x(12)*x(12))*x(84)-2.49149e-7*x(46)*x(46);
             (x(14)*x(14)-x(11)*x(11))*x(85)-2.49149e-7*x(47)*x(47);
             (x(15)*x(15)-x(12)*x(12))*x(86)-2.49149e-7*x(48)*x(48);
             (x(15)*x(15)-x(16)*x(16))*x(87)-2.49149e-7*x(49)*x(49);
             (x(15)*x(15)-x(17)*x(17))*x(88)-2.49149e-7*x(50)*x(50);
             (x(16)*x(16)-x(2)*x(2))*x(89)-2.49149e-7*x(51)*x(51);
             (x(16)*x(16)-x(15)*x(15))*x(90)-2.49149e-7*x(52)*x(52);
             (x(16)*x(16)-x(18)*x(18))*x(91)-2.49149e-7*x(53)*x(53);
             (x(17)*x(17)-x(15)*x(15))*x(92)-2.49149e-7*x(54)*x(54);
             (x(18)*x(18)-x(16)*x(16))*x(93)-2.49149e-7*x(55)*x(55);
             (x(19)*x(19)-x(11)*x(11))*x(94)-2.49149e-7*x(56)*x(56);
             (x(19)*x(19)-x(20)*x(20))*x(95)-2.49149e-7*x(57)*x(57);
             (x(20)*x(20)-x(19)*x(19))*x(96)-2.49149e-7*x(58)*x(58)];
cl = [4000,4000,4000,4000,4000,4000,4000,4000,4000,4000,4000,4000,4000,4000,4000,4000,4000,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,7500,7500,7500,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,2000000,3000000,2000000,2000000,3000000,2000000,1000000,2000000,4000000,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
cu = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,7500,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,2000000,3000000,2000000,2000000,3000000,2000000,1000000,2000000,4000000,0,0,0,0,0,0,0,0,Inf,Inf,Inf,50000000,50000000,50000000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_minlp_219');
opts.sense = 'min';
