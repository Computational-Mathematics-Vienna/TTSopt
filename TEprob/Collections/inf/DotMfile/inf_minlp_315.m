% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 07-Jan-2016 10:59:24
% Model: inf_minlp_315

% Objective
fun = @(x)20*x(6)+20*x(7)+20*x(8)+20*x(9)+20*x(10)+40*x(31)+40*x(32)+40*x(33)+40*x(34)+40*x(35);

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(2);
             x(3);
             x(4);
             x(5);
             x(2);
             x(3);
             x(4);
             x(5);
             x(1);
             2*x(31);
             x(32)+x(36);
             x(33)+x(41);
             x(34)+x(46);
             x(35)+x(51);
             x(32)+x(36);
             2*x(37);
             x(38)+x(42);
             x(39)+x(47);
             x(40)+x(52);
             x(33)+x(41);
             x(38)+x(42);
             2*x(43);
             x(44)+x(48);
             x(45)+x(53);
             x(34)+x(46);
             x(39)+x(47);
             x(44)+x(48);
             2*x(49);
             x(50)+x(54);
             x(35)+x(51);
             x(40)+x(52);
             x(45)+x(53);
             x(50)+x(54);
             2*x(55);
             x(6)-100000000*x(31);
             x(7)-100000000*x(32);
             x(8)-100000000*x(33);
             x(9)-100000000*x(34);
             x(10)-100000000*x(35);
             x(11)-100000000*x(36);
             x(12)-100000000*x(37);
             x(13)-100000000*x(38);
             x(14)-100000000*x(39);
             x(15)-100000000*x(40);
             x(16)-100000000*x(41);
             x(17)-100000000*x(42);
             x(18)-100000000*x(43);
             x(19)-100000000*x(44);
             x(20)-100000000*x(45);
             x(21)-100000000*x(46);
             x(22)-100000000*x(47);
             x(23)-100000000*x(48);
             x(24)-100000000*x(49);
             x(25)-100000000*x(50);
             x(26)-100000000*x(51);
             x(27)-100000000*x(52);
             x(28)-100000000*x(53);
             x(29)-100000000*x(54);
             x(30)-100000000*x(55);
             -100000000*x(6)+x(31);
             -100000000*x(7)+x(32);
             -100000000*x(8)+x(33);
             -100000000*x(9)+x(34);
             -100000000*x(10)+x(35);
             -100000000*x(11)+x(36);
             -100000000*x(12)+x(37);
             -100000000*x(13)+x(38);
             -100000000*x(14)+x(39);
             -100000000*x(15)+x(40);
             -100000000*x(16)+x(41);
             -100000000*x(17)+x(42);
             -100000000*x(18)+x(43);
             -100000000*x(19)+x(44);
             -100000000*x(20)+x(45);
             -100000000*x(21)+x(46);
             -100000000*x(22)+x(47);
             -100000000*x(23)+x(48);
             -100000000*x(24)+x(49);
             -100000000*x(25)+x(50);
             -100000000*x(26)+x(51);
             -100000000*x(27)+x(52);
             -100000000*x(28)+x(53);
             -100000000*x(29)+x(54);
             -100000000*x(30)+x(55);
             -100000000*x(31);
             x(1)-x(2)-100000000*x(32);
             x(1)-x(3)-100000000*x(33);
             x(1)-x(4)-100000000*x(34);
             x(1)-x(5)-100000000*x(35);
             -x(1)+x(2)-100000000*x(36);
             -100000000*x(37);
             x(2)-x(3)-100000000*x(38);
             x(2)-x(4)-100000000*x(39);
             x(2)-x(5)-100000000*x(40);
             -x(1)+x(3)-100000000*x(41);
             -x(2)+x(3)-100000000*x(42);
             -100000000*x(43);
             x(3)-x(4)-100000000*x(44);
             x(3)-x(5)-100000000*x(45);
             -x(1)+x(4)-100000000*x(46);
             -x(2)+x(4)-100000000*x(47);
             -x(3)+x(4)-100000000*x(48);
             -100000000*x(49);
             x(4)-x(5)-100000000*x(50);
             -x(1)+x(5)-100000000*x(51);
             -x(2)+x(5)-100000000*x(52);
             -x(3)+x(5)-100000000*x(53);
             -x(4)+x(5)-100000000*x(54);
             -100000000*x(55);
             100000000*x(31);
             -x(1)+x(2)+100000000*x(32);
             -x(1)+x(3)+100000000*x(33);
             -x(1)+x(4)+100000000*x(34);
             -x(1)+x(5)+100000000*x(35);
             x(1)-x(2)+100000000*x(36);
             100000000*x(37);
             -x(2)+x(3)+100000000*x(38);
             -x(2)+x(4)+100000000*x(39);
             -x(2)+x(5)+100000000*x(40);
             x(1)-x(3)+100000000*x(41);
             x(2)-x(3)+100000000*x(42);
             100000000*x(43);
             -x(3)+x(4)+100000000*x(44);
             -x(3)+x(5)+100000000*x(45);
             x(1)-x(4)+100000000*x(46);
             x(2)-x(4)+100000000*x(47);
             x(3)-x(4)+100000000*x(48);
             100000000*x(49);
             -x(4)+x(5)+100000000*x(50);
             x(1)-x(5)+100000000*x(51);
             x(2)-x(5)+100000000*x(52);
             x(3)-x(5)+100000000*x(53);
             x(4)-x(5)+100000000*x(54);
             100000000*x(55);
             x(10)+x(15)+x(20)+x(25)-x(26)-x(27)-x(28)-x(29);
             x(7)-x(11)-x(13)-x(14)-x(15)+x(17)+x(22)+x(27);
             x(8)+x(13)-x(16)-x(17)-x(19)-x(20)+x(23)+x(28);
             x(9)+x(14)+x(19)-x(21)-x(22)-x(23)-x(25)+x(29);
             x(6)+x(7)+x(8)+x(9)+x(10);
             x(6)+x(7)+x(8)+x(9)+x(10);
             x(1)*x(1)-x(1)*x(1)-2.49149e-8*x(6)*x(6);
             x(1)*x(1)-x(2)*x(2)-2.49149e-8*x(7)*x(7);
             x(1)*x(1)-x(3)*x(3)-2.49149e-8*x(8)*x(8);
             x(1)*x(1)-x(4)*x(4)-2.49149e-8*x(9)*x(9);
             x(1)*x(1)-x(5)*x(5)-2.49149e-8*x(10)*x(10);
             x(2)*x(2)-x(1)*x(1)-2.49149e-8*x(11)*x(11);
             x(2)*x(2)-x(2)*x(2)-2.49149e-8*x(12)*x(12);
             x(2)*x(2)-x(3)*x(3)-2.49149e-8*x(13)*x(13);
             x(2)*x(2)-x(4)*x(4)-2.49149e-8*x(14)*x(14);
             x(2)*x(2)-x(5)*x(5)-2.49149e-8*x(15)*x(15);
             x(3)*x(3)-x(1)*x(1)-2.49149e-8*x(16)*x(16);
             x(3)*x(3)-x(2)*x(2)-2.49149e-8*x(17)*x(17);
             x(3)*x(3)-x(3)*x(3)-2.49149e-8*x(18)*x(18);
             x(3)*x(3)-x(4)*x(4)-2.49149e-8*x(19)*x(19);
             x(3)*x(3)-x(5)*x(5)-2.49149e-8*x(20)*x(20);
             x(4)*x(4)-x(1)*x(1)-2.49149e-8*x(21)*x(21);
             x(4)*x(4)-x(2)*x(2)-2.49149e-8*x(22)*x(22);
             x(4)*x(4)-x(3)*x(3)-2.49149e-8*x(23)*x(23);
             x(4)*x(4)-x(4)*x(4)-2.49149e-8*x(24)*x(24);
             x(4)*x(4)-x(5)*x(5)-2.49149e-8*x(25)*x(25);
             x(5)*x(5)-x(1)*x(1)-2.49149e-8*x(26)*x(26);
             x(5)*x(5)-x(2)*x(2)-2.49149e-8*x(27)*x(27);
             x(5)*x(5)-x(3)*x(3)-2.49149e-8*x(28)*x(28);
             x(5)*x(5)-x(4)*x(4)-2.49149e-8*x(29)*x(29);
             x(5)*x(5)-x(5)*x(5)-2.49149e-8*x(30)*x(30)];
cl = [4000,4000,4000,4000,-Inf,-Inf,-Inf,-Inf,7500,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,2000000,0,0,0,0,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
cu = [Inf,Inf,Inf,Inf,7500,7500,7500,7500,7500,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,100000000,2000000,0,0,0,Inf,5000000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBB';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_minlp_315');
opts.sense = 'min';
