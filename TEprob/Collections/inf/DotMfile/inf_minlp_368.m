% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 07-Jan-2016 11:31:20
% Model: inf_minlp_368

% Objective
fun = @(x)-1000*x(1)-1000*x(2)-1000*x(3)-1000*x(4)-1000*x(5)+20*x(6)+40*x(16);

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(2);
             x(3);
             x(4);
             x(5);
             x(2);
             x(3);
             x(4);
             x(5);
             x(1);
             x(16)+x(17);
             x(16)+x(17);
             x(18)+x(20);
             x(19)+x(22);
             x(18)+x(20);
             x(21)+x(24);
             x(19)+x(22);
             x(23)+x(25);
             x(21)+x(24);
             x(23)+x(25);
             x(6)-1000*x(16);
             x(7)-1000*x(17);
             x(8)-1000*x(18);
             x(9)-1000*x(19);
             x(10)-1000*x(20);
             x(11)-1000*x(21);
             x(12)-1000*x(22);
             x(13)-1000*x(23);
             x(14)-1000*x(24);
             x(15)-1000*x(25);
             -1000*x(6)+x(16);
             -1000*x(7)+x(17);
             -1000*x(8)+x(18);
             -1000*x(9)+x(19);
             -1000*x(10)+x(20);
             -1000*x(11)+x(21);
             -1000*x(12)+x(22);
             -1000*x(13)+x(23);
             -1000*x(14)+x(24);
             -1000*x(15)+x(25);
             x(1)-x(2)-1000*x(16);
             -x(1)+x(2)-1000*x(17);
             x(2)-x(3)-1000*x(18);
             x(2)-x(4)-1000*x(19);
             -x(2)+x(3)-1000*x(20);
             x(3)-x(5)-1000*x(21);
             -x(2)+x(4)-1000*x(22);
             x(4)-x(5)-1000*x(23);
             -x(3)+x(5)-1000*x(24);
             -x(4)+x(5)-1000*x(25);
             -x(1)+x(2)+1000*x(16);
             x(1)-x(2)+1000*x(17);
             -x(2)+x(3)+1000*x(18);
             -x(2)+x(4)+1000*x(19);
             x(2)-x(3)+1000*x(20);
             -x(3)+x(5)+1000*x(21);
             x(2)-x(4)+1000*x(22);
             -x(4)+x(5)+1000*x(23);
             x(3)-x(5)+1000*x(24);
             x(4)-x(5)+1000*x(25);
             x(11)+x(13)-x(14)-x(15);
             x(6)-x(7)-x(8)-x(9)+x(10)+x(12);
             x(8)-x(10)-x(11)+x(14);
             x(9)-x(12)-x(13)+x(15);
             x(6);
             x(6);
             -0.249149*x(6)*x(6)+x(1)-x(2)-1000*x(16);
             -0.249149*x(7)*x(7)-x(1)+x(2)-1000*x(17);
             -0.249149*x(8)*x(8)+x(2)-x(3)-1000*x(18);
             -0.249149*x(9)*x(9)+x(2)-x(4)-1000*x(19);
             -0.249149*x(10)*x(10)-x(2)+x(3)-1000*x(20);
             -0.249149*x(11)*x(11)+x(3)-x(5)-1000*x(21);
             -0.249149*x(12)*x(12)-x(2)+x(4)-1000*x(22);
             -0.249149*x(13)*x(13)+x(4)-x(5)-1000*x(23);
             -0.249149*x(14)*x(14)-x(3)+x(5)-1000*x(24);
             -0.249149*x(15)*x(15)-x(4)+x(5)-1000*x(25)];
cl = [4000,4000,4000,0,-Inf,-Inf,-Inf,-Inf,7500,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,20,0,0,0,0,-Inf,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000,-1000]';
cu = [Inf,Inf,Inf,Inf,7500,7500,7500,0,7500,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,20,0,0,0,Inf,50,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCBBBBBBBBBB';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_minlp_368');
opts.sense = 'min';
