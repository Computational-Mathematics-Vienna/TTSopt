% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 01-Jun-2015 10:09:19
% Model: inf_nlp_69

% Objective
fun = @(x)(x(3)*x(7)+x(5)*x(8))*x(1)+(x(4)*x(7)+x(6)*x(8))*x(2)-(x(9)*(2.5+x(7))+x(10)*(9+x(8)))-(x(11)*(3.5-x(7))+x(12)*(15-x(8)))-(x(17)*x(3)+x(18)*x(4)+x(19)*x(5)+x(20)*x(6))-(x(21)*(0.8-x(3))+x(22)*(0.9-x(4))+x(23)*(1-x(5))+x(24)*(1-x(6)))-(x(33)*(1-x(3)-x(5))+x(34)*(1-x(4)-x(6)))-x(54)*(3-x(36)-x(37)-x(38)-x(39)-x(40)-x(41)-x(42)-x(43))-x(35)*(x(44)+x(45)+x(46)+x(47))-(x(25)*(0.4-x(3)+0.4*x(36)-0.4*x(40))+x(26)*(0.45-x(4)+0.45*x(37)-0.45*x(41))+x(27)*(0.6-x(5)+0.4*x(38)-0.4*x(42))+x(28)*(0.55-x(6)+0.4*x(39)-0.4*x(43)))-(x(13)*(0.5-x(7)+3*x(44)-3*x(46))+x(14)*(3-x(8)+12*x(45)-12*x(47)))-(x(29)*(1-x(36)-x(40))+x(30)*(1-x(37)-x(41))+x(31)*(1-x(38)-x(42))+x(32)*(1-x(39)-x(43)))-(x(15)*(1-x(44)-x(46))+x(16)*(1-x(45)-x(47)))-(x(48)*x(36)*x(40)+x(49)*x(37)*x(41)+x(50)*x(38)*x(42)+x(51)*x(39)*x(43))-(x(52)*x(44)*x(46)+x(53)*x(45)*x(47));

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(1)+x(2);
             x(1)*x(3)+x(2)*x(4)-x(9)+x(11)+x(13);
             x(1)*x(5)+x(2)*x(6)-x(10)+x(12)+x(14);
             x(1)*x(7)-x(17)+x(21)+x(25)+x(33);
             x(2)*x(7)-x(18)+x(22)+x(26)+x(34);
             x(1)*x(8)-x(19)+x(23)+x(27)+x(33);
             x(2)*x(8)-x(20)+x(24)+x(28)+x(34);
             -0.4*x(25)+x(29)+x(40)+x(54);
             -0.45*x(26)+x(30)+x(41)+x(54);
             -0.4*x(27)+x(31)+x(42)+x(54);
             -0.4*x(28)+x(32)+x(43)+x(54);
             0.4*x(25)+x(29)+x(36)+x(54);
             0.45*x(26)+x(30)+x(37)+x(54);
             0.4*x(27)+x(31)+x(38)+x(54);
             0.4*x(28)+x(32)+x(39)+x(54);
             -3*x(13)+x(15)+x(35)+x(46);
             -12*x(14)+x(16)+x(35)+x(47);
             3*x(13)+x(15)+x(35)+x(44);
             12*x(14)+x(16)+x(35)+x(45);
             x(7);
             x(8);
             x(7);
             x(8);
             x(3);
             x(4);
             x(5);
             x(6);
             x(3);
             x(4);
             x(5);
             x(6);
             x(3)+x(5);
             x(4)+x(6);
             x(44)+x(45)+x(46)+x(47);
             x(36)+x(37)+x(38)+x(39)+x(40)+x(41)+x(42)+x(43);
             x(36)+x(40);
             x(37)+x(41);
             x(38)+x(42);
             x(39)+x(43);
             x(44)+x(46);
             x(45)+x(47);
             x(36)*x(40);
             x(37)*x(41);
             x(38)*x(42);
             x(39)*x(43);
             x(44)*x(46);
             x(45)*x(47);
             x(9)*(2.5+x(7));
             x(10)*(9+x(8));
             x(11)*(3.5-x(7));
             x(12)*(15-x(8));
             x(17)*x(3);
             x(18)*x(4);
             x(19)*x(5);
             x(20)*x(6);
             x(21)*(0.8-x(3));
             x(22)*(0.9-x(4));
             x(23)*(1-x(5));
             x(24)*(1-x(6));
             x(33)*(1-x(3)-x(5));
             x(34)*(1-x(4)-x(6));
             x(54)*(3-x(36)-x(37)-x(38)-x(39)-x(40)-x(41)-x(42)-x(43));
             x(35)*(x(44)+x(45)+x(46)+x(47));
             x(25)*(0.4-x(3)+0.4*x(36)-0.4*x(40));
             x(26)*(0.45-x(4)+0.45*x(37)-0.45*x(41));
             x(27)*(0.6-x(5)+0.4*x(38)-0.4*x(42));
             x(28)*(0.55-x(6)+0.4*x(39)-0.4*x(43));
             x(13)*(0.5-x(7)+3*x(44)-3*x(46));
             x(14)*(3-x(8)+12*x(45)-12*x(47));
             x(29)*(1-x(36)-x(40));
             x(30)*(1-x(37)-x(41));
             x(31)*(1-x(38)-x(42));
             x(32)*(1-x(39)-x(43));
             x(15)*(1-x(44)-x(46));
             x(16)*(1-x(45)-x(47));
             x(48)*x(36)*x(40);
             x(49)*x(37)*x(41);
             x(50)*x(38)*x(42);
             x(51)*x(39)*x(43);
             x(52)*x(44)*x(46);
             x(53)*x(45)*x(47)];
cl = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.5,-9,-Inf,-Inf,0,0,0,0,-Inf,-Inf,-Inf,-Inf,1,1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
cu = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Inf,Inf,3.5,15,Inf,Inf,Inf,Inf,0.8,0.9,1,1,1,1,20,3,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC';

% Starting Guess
x0 = [0.5,0.5,0.5,0.5,0.5,0.5,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_nlp_69');
opts.sense = 'max';
