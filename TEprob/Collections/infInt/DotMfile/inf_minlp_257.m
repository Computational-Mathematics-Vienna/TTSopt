% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 07-Jan-2016 10:28:22
% Model: inf_minlp_257

% Objective
fun = @(x)100*x(23)+50*x(24)+10*x(28)+50*x(29)+40*x(34)+100*x(35)+70*x(40);

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(1)-0.5*x(11);
             x(2)-0.5*x(12);
             x(3)-0.5*x(13);
             x(4)-0.5*x(14);
             x(5)-0.5*x(15);
             x(1)+0.5*x(11);
             x(2)+0.5*x(12);
             x(3)+0.5*x(13);
             x(4)+0.5*x(14);
             x(5)+0.5*x(15);
             x(6)-0.5*x(16);
             x(7)-0.5*x(17);
             x(8)-0.5*x(18);
             x(9)-0.5*x(19);
             x(10)-0.5*x(20);
             x(6)+0.5*x(16);
             x(7)+0.5*x(17);
             x(8)+0.5*x(18);
             x(9)+0.5*x(19);
             x(10)+0.5*x(20);
             x(11)*x(16);
             x(12)*x(17);
             x(13)*x(18);
             x(14)*x(19);
             x(15)*x(20);
             -x(16)+12*x(46)+12*x(71);
             x(6)-x(7)-0.5*x(16)-0.5*x(17)+12*x(47)+12*x(72);
             x(6)-x(8)-0.5*x(16)-0.5*x(18)+12*x(48)+12*x(73);
             x(6)-x(9)-0.5*x(16)-0.5*x(19)+12*x(49)+12*x(74);
             x(6)-x(10)-0.5*x(16)-0.5*x(20)+12*x(50)+12*x(75);
             -x(6)+x(7)-0.5*x(16)-0.5*x(17)+12*x(51)+12*x(76);
             -x(17)+12*x(52)+12*x(77);
             x(7)-x(8)-0.5*x(17)-0.5*x(18)+12*x(53)+12*x(78);
             x(7)-x(9)-0.5*x(17)-0.5*x(19)+12*x(54)+12*x(79);
             x(7)-x(10)-0.5*x(17)-0.5*x(20)+12*x(55)+12*x(80);
             -x(6)+x(8)-0.5*x(16)-0.5*x(18)+12*x(56)+12*x(81);
             -x(7)+x(8)-0.5*x(17)-0.5*x(18)+12*x(57)+12*x(82);
             -x(18)+12*x(58)+12*x(83);
             x(8)-x(9)-0.5*x(18)-0.5*x(19)+12*x(59)+12*x(84);
             x(8)-x(10)-0.5*x(18)-0.5*x(20)+12*x(60)+12*x(85);
             -x(6)+x(9)-0.5*x(16)-0.5*x(19)+12*x(61)+12*x(86);
             -x(7)+x(9)-0.5*x(17)-0.5*x(19)+12*x(62)+12*x(87);
             -x(8)+x(9)-0.5*x(18)-0.5*x(19)+12*x(63)+12*x(88);
             -x(19)+12*x(64)+12*x(89);
             x(9)-x(10)-0.5*x(19)-0.5*x(20)+12*x(65)+12*x(90);
             -x(6)+x(10)-0.5*x(16)-0.5*x(20)+12*x(66)+12*x(91);
             -x(7)+x(10)-0.5*x(17)-0.5*x(20)+12*x(67)+12*x(92);
             -x(8)+x(10)-0.5*x(18)-0.5*x(20)+12*x(68)+12*x(93);
             -x(9)+x(10)-0.5*x(19)-0.5*x(20)+12*x(69)+12*x(94);
             -x(20)+12*x(70)+12*x(95);
             x(16)-12*x(46)+12*x(71);
             x(6)-x(7)+0.5*x(16)+0.5*x(17)-12*x(47)+12*x(72);
             x(6)-x(8)+0.5*x(16)+0.5*x(18)-12*x(48)+12*x(73);
             x(6)-x(9)+0.5*x(16)+0.5*x(19)-12*x(49)+12*x(74);
             x(6)-x(10)+0.5*x(16)+0.5*x(20)-12*x(50)+12*x(75);
             -x(6)+x(7)+0.5*x(16)+0.5*x(17)-12*x(51)+12*x(76);
             x(17)-12*x(52)+12*x(77);
             x(7)-x(8)+0.5*x(17)+0.5*x(18)-12*x(53)+12*x(78);
             x(7)-x(9)+0.5*x(17)+0.5*x(19)-12*x(54)+12*x(79);
             x(7)-x(10)+0.5*x(17)+0.5*x(20)-12*x(55)+12*x(80);
             -x(6)+x(8)+0.5*x(16)+0.5*x(18)-12*x(56)+12*x(81);
             -x(7)+x(8)+0.5*x(17)+0.5*x(18)-12*x(57)+12*x(82);
             x(18)-12*x(58)+12*x(83);
             x(8)-x(9)+0.5*x(18)+0.5*x(19)-12*x(59)+12*x(84);
             x(8)-x(10)+0.5*x(18)+0.5*x(20)-12*x(60)+12*x(85);
             -x(6)+x(9)+0.5*x(16)+0.5*x(19)-12*x(61)+12*x(86);
             -x(7)+x(9)+0.5*x(17)+0.5*x(19)-12*x(62)+12*x(87);
             -x(8)+x(9)+0.5*x(18)+0.5*x(19)-12*x(63)+12*x(88);
             x(19)-12*x(64)+12*x(89);
             x(9)-x(10)+0.5*x(19)+0.5*x(20)-12*x(65)+12*x(90);
             -x(6)+x(10)+0.5*x(16)+0.5*x(20)-12*x(66)+12*x(91);
             -x(7)+x(10)+0.5*x(17)+0.5*x(20)-12*x(67)+12*x(92);
             -x(8)+x(10)+0.5*x(18)+0.5*x(20)-12*x(68)+12*x(93);
             -x(9)+x(10)+0.5*x(19)+0.5*x(20)-12*x(69)+12*x(94);
             x(20)-12*x(70)+12*x(95);
             x(11)+11*x(46)-11*x(71);
             x(1)-x(2)+0.5*x(11)+0.5*x(12)+11*x(47)-11*x(72);
             x(1)-x(3)+0.5*x(11)+0.5*x(13)+11*x(48)-11*x(73);
             x(1)-x(4)+0.5*x(11)+0.5*x(14)+11*x(49)-11*x(74);
             x(1)-x(5)+0.5*x(11)+0.5*x(15)+11*x(50)-11*x(75);
             -x(1)+x(2)+0.5*x(11)+0.5*x(12)+11*x(51)-11*x(76);
             x(12)+11*x(52)-11*x(77);
             x(2)-x(3)+0.5*x(12)+0.5*x(13)+11*x(53)-11*x(78);
             x(2)-x(4)+0.5*x(12)+0.5*x(14)+11*x(54)-11*x(79);
             x(2)-x(5)+0.5*x(12)+0.5*x(15)+11*x(55)-11*x(80);
             -x(1)+x(3)+0.5*x(11)+0.5*x(13)+11*x(56)-11*x(81);
             -x(2)+x(3)+0.5*x(12)+0.5*x(13)+11*x(57)-11*x(82);
             x(13)+11*x(58)-11*x(83);
             x(3)-x(4)+0.5*x(13)+0.5*x(14)+11*x(59)-11*x(84);
             x(3)-x(5)+0.5*x(13)+0.5*x(15)+11*x(60)-11*x(85);
             -x(1)+x(4)+0.5*x(11)+0.5*x(14)+11*x(61)-11*x(86);
             -x(2)+x(4)+0.5*x(12)+0.5*x(14)+11*x(62)-11*x(87);
             -x(3)+x(4)+0.5*x(13)+0.5*x(14)+11*x(63)-11*x(88);
             x(14)+11*x(64)-11*x(89);
             x(4)-x(5)+0.5*x(14)+0.5*x(15)+11*x(65)-11*x(90);
             -x(1)+x(5)+0.5*x(11)+0.5*x(15)+11*x(66)-11*x(91);
             -x(2)+x(5)+0.5*x(12)+0.5*x(15)+11*x(67)-11*x(92);
             -x(3)+x(5)+0.5*x(13)+0.5*x(15)+11*x(68)-11*x(93);
             -x(4)+x(5)+0.5*x(14)+0.5*x(15)+11*x(69)-11*x(94);
             x(15)+11*x(70)-11*x(95);
             -x(11)-11*x(46)-11*x(71);
             x(1)-x(2)-0.5*x(11)-0.5*x(12)-11*x(47)-11*x(72);
             x(1)-x(3)-0.5*x(11)-0.5*x(13)-11*x(48)-11*x(73);
             x(1)-x(4)-0.5*x(11)-0.5*x(14)-11*x(49)-11*x(74);
             x(1)-x(5)-0.5*x(11)-0.5*x(15)-11*x(50)-11*x(75);
             -x(1)+x(2)-0.5*x(11)-0.5*x(12)-11*x(51)-11*x(76);
             -x(12)-11*x(52)-11*x(77);
             x(2)-x(3)-0.5*x(12)-0.5*x(13)-11*x(53)-11*x(78);
             x(2)-x(4)-0.5*x(12)-0.5*x(14)-11*x(54)-11*x(79);
             x(2)-x(5)-0.5*x(12)-0.5*x(15)-11*x(55)-11*x(80);
             -x(1)+x(3)-0.5*x(11)-0.5*x(13)-11*x(56)-11*x(81);
             -x(2)+x(3)-0.5*x(12)-0.5*x(13)-11*x(57)-11*x(82);
             -x(13)-11*x(58)-11*x(83);
             x(3)-x(4)-0.5*x(13)-0.5*x(14)-11*x(59)-11*x(84);
             x(3)-x(5)-0.5*x(13)-0.5*x(15)-11*x(60)-11*x(85);
             -x(1)+x(4)-0.5*x(11)-0.5*x(14)-11*x(61)-11*x(86);
             -x(2)+x(4)-0.5*x(12)-0.5*x(14)-11*x(62)-11*x(87);
             -x(3)+x(4)-0.5*x(13)-0.5*x(14)-11*x(63)-11*x(88);
             -x(14)-11*x(64)-11*x(89);
             x(4)-x(5)-0.5*x(14)-0.5*x(15)-11*x(65)-11*x(90);
             -x(1)+x(5)-0.5*x(11)-0.5*x(15)-11*x(66)-11*x(91);
             -x(2)+x(5)-0.5*x(12)-0.5*x(15)-11*x(67)-11*x(92);
             -x(3)+x(5)-0.5*x(13)-0.5*x(15)-11*x(68)-11*x(93);
             -x(4)+x(5)-0.5*x(14)-0.5*x(15)-11*x(69)-11*x(94);
             -x(15)-11*x(70)-11*x(95);
             x(11);
             x(12);
             x(13);
             x(14);
             x(15);
             x(11);
             x(12);
             x(13);
             x(14);
             x(15);
             x(16);
             x(17);
             x(18);
             x(19);
             x(20);
             x(16);
             x(17);
             x(18);
             x(19);
             x(20);
             x(21);
             -((x(1)-x(2))^2+(x(6)-x(7))^2)^0.5+x(22);
             -((x(1)-x(3))^2+(x(6)-x(8))^2)^0.5+x(23);
             -((x(1)-x(4))^2+(x(6)-x(9))^2)^0.5+x(24);
             -((x(1)-x(5))^2+(x(6)-x(10))^2)^0.5+x(25);
             -((x(2)-x(1))^2+(x(7)-x(6))^2)^0.5+x(26);
             x(27);
             -((x(2)-x(3))^2+(x(7)-x(8))^2)^0.5+x(28);
             -((x(2)-x(4))^2+(x(7)-x(9))^2)^0.5+x(29);
             -((x(2)-x(5))^2+(x(7)-x(10))^2)^0.5+x(30);
             -((x(3)-x(1))^2+(x(8)-x(6))^2)^0.5+x(31);
             -((x(3)-x(2))^2+(x(8)-x(7))^2)^0.5+x(32);
             x(33);
             -((x(3)-x(4))^2+(x(8)-x(9))^2)^0.5+x(34);
             -((x(3)-x(5))^2+(x(8)-x(10))^2)^0.5+x(35);
             -((x(4)-x(1))^2+(x(9)-x(6))^2)^0.5+x(36);
             -((x(4)-x(2))^2+(x(9)-x(7))^2)^0.5+x(37);
             -((x(4)-x(3))^2+(x(9)-x(8))^2)^0.5+x(38);
             x(39);
             -((x(4)-x(5))^2+(x(9)-x(10))^2)^0.5+x(40);
             -((x(5)-x(1))^2+(x(10)-x(6))^2)^0.5+x(41);
             -((x(5)-x(2))^2+(x(10)-x(7))^2)^0.5+x(42);
             -((x(5)-x(3))^2+(x(10)-x(8))^2)^0.5+x(43);
             -((x(5)-x(4))^2+(x(10)-x(9))^2)^0.5+x(44);
             x(45)];
cl = [0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,28,36,10,40,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,2,2,2,2,2,-Inf,-Inf,-Inf,-Inf,-Inf,2,2,2,2,2,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
cu = [Inf,Inf,Inf,Inf,Inf,11,11,11,11,11,Inf,Inf,Inf,Inf,Inf,12,12,12,12,12,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,9,9,9,9,9,Inf,Inf,Inf,Inf,Inf,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_minlp_257');
opts.sense = 'min';
