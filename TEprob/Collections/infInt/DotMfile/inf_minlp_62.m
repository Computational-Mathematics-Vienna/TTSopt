% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 07-Jan-2016 15:17:46
% Model: inf_minlp_62

% Objective
fun = @(x)(220+(-30*exp(-35*x(67)))-40*exp(-25*x(67))+x(1)+x(2))/x(67);

% Bounds
lb = [-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0.01,1,1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,1,20,20,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[-6*x(67)*(-14-17.5*x(67)+x(68))+x(1)-16*x(63)-30*x(65);
             -6*x(67)*(-20-12.5*x(67)+x(69))+x(2)-16*x(64)-30*x(66);
             -(14+35*x(67))^0*exp((-14)-35*x(67))+x(3);
             -(14+35*x(67))^1*exp((-14)-35*x(67))+x(4);
             -0.5*(14+35*x(67))^2*exp((-14)-35*x(67))+x(5);
             -0.166666666666667*(14+35*x(67))^3*exp((-14)-35*x(67))+x(6);
             -0.0416666666666667*(14+35*x(67))^4*exp((-14)-35*x(67))+x(7);
             -0.00833333333333333*(14+35*x(67))^5*exp((-14)-35*x(67))+x(8);
             -0.00138888888888889*(14+35*x(67))^6*exp((-14)-35*x(67))+x(9);
             -0.000198412698412698*(14+35*x(67))^7*exp((-14)-35*x(67))+x(10);
             -2.48015873015873e-5*(14+35*x(67))^8*exp((-14)-35*x(67))+x(11);
             -2.75573192239859e-6*(14+35*x(67))^9*exp((-14)-35*x(67))+x(12);
             -2.75573192239859e-7*(14+35*x(67))^10*exp((-14)-35*x(67))+x(13);
             -2.50521083854417e-8*(14+35*x(67))^11*exp((-14)-35*x(67))+x(14);
             -2.08767569878681e-9*(14+35*x(67))^12*exp((-14)-35*x(67))+x(15);
             -1.60590438368216e-10*(14+35*x(67))^13*exp((-14)-35*x(67))+x(16);
             -1.14707455977297e-11*(14+35*x(67))^14*exp((-14)-35*x(67))+x(17);
             -(20+25*x(67))^0*exp((-20)-25*x(67))+x(18);
             -(20+25*x(67))^1*exp((-20)-25*x(67))+x(19);
             -0.5*(20+25*x(67))^2*exp((-20)-25*x(67))+x(20);
             -0.166666666666667*(20+25*x(67))^3*exp((-20)-25*x(67))+x(21);
             -0.0416666666666667*(20+25*x(67))^4*exp((-20)-25*x(67))+x(22);
             -0.00833333333333333*(20+25*x(67))^5*exp((-20)-25*x(67))+x(23);
             -0.00138888888888889*(20+25*x(67))^6*exp((-20)-25*x(67))+x(24);
             -0.000198412698412698*(20+25*x(67))^7*exp((-20)-25*x(67))+x(25);
             -2.48015873015873e-5*(20+25*x(67))^8*exp((-20)-25*x(67))+x(26);
             -2.75573192239859e-6*(20+25*x(67))^9*exp((-20)-25*x(67))+x(27);
             -2.75573192239859e-7*(20+25*x(67))^10*exp((-20)-25*x(67))+x(28);
             -2.50521083854417e-8*(20+25*x(67))^11*exp((-20)-25*x(67))+x(29);
             -2.08767569878681e-9*(20+25*x(67))^12*exp((-20)-25*x(67))+x(30);
             -1.60590438368216e-10*(20+25*x(67))^13*exp((-20)-25*x(67))+x(31);
             -1.14707455977297e-11*(20+25*x(67))^14*exp((-20)-25*x(67))+x(32);
             x(33);
             x(34);
             x(35);
             x(36);
             x(37);
             x(38);
             x(39);
             x(40);
             x(41);
             x(42);
             x(43);
             x(44);
             x(45);
             x(46);
             x(47);
             x(48);
             x(49);
             x(50);
             x(51);
             x(52);
             x(53);
             x(54);
             x(55);
             x(56);
             x(57);
             x(58);
             x(59);
             x(60);
             x(61);
             x(62);
             -x(68)+x(70)+x(71)+x(72)+x(73)+x(74)+x(75)+x(76)+x(77)+x(78)+x(79)+x(80)+x(81)+x(82)+x(83)+x(84);
             -x(69)+x(85)+x(86)+x(87)+x(88)+x(89)+x(90)+x(91)+x(92)+x(93)+x(94)+x(95)+x(96)+x(97)+x(98)+x(99);
             x(70);
             -x(70)+x(71);
             -x(71)+x(72);
             -x(72)+x(73);
             -x(73)+x(74);
             -x(74)+x(75);
             -x(75)+x(76);
             -x(76)+x(77);
             -x(77)+x(78);
             -x(78)+x(79);
             -x(79)+x(80);
             -x(80)+x(81);
             -x(81)+x(82);
             -x(82)+x(83);
             -x(83)+x(84);
             x(85);
             -x(85)+x(86);
             -x(86)+x(87);
             -x(87)+x(88);
             -x(88)+x(89);
             -x(89)+x(90);
             -x(90)+x(91);
             -x(91)+x(92);
             -x(92)+x(93);
             -x(93)+x(94);
             -x(94)+x(95);
             -x(95)+x(96);
             -x(96)+x(97);
             -x(97)+x(98);
             -x(98)+x(99);
             -(17.5*((0.4+x(67))^2*(1-(x(70)*x(3)+x(71)*x(4)+x(72)*x(5)+x(73)*x(6)+x(74)*x(7)+x(75)*x(8)+x(76)*x(9)+x(77)*x(10)+x(78)*x(11)+x(79)*x(12)+x(80)*x(13)+x(81)*x(14)+x(82)*x(15)+x(83)*x(16)+x(84)*x(17)))+0.16*(x(70)*x(33)+x(71)*x(34)+x(72)*x(35)+x(73)*x(36)+x(74)*x(37)+x(75)*x(38)+x(76)*x(39)+x(77)*x(40)+x(78)*x(41)+x(79)*x(42)+x(80)*x(43)+x(81)*x(44)+x(82)*x(45)+x(83)*x(46)+x(84)*x(47)))+0.0142857142857143*x(68)*(1+x(68))*(x(33)-(x(70)*x(3)+x(71)*x(4)+x(72)*x(5)+x(73)*x(6)+x(74)*x(7)+x(75)*x(8)+x(76)*x(9)+x(77)*x(10)+x(78)*x(11)+x(79)*x(12)+x(80)*x(13)+x(81)*x(14)+x(82)*x(15)+x(83)*x(16)+x(84)*x(17))+x(34)+x(35)+x(36)+x(37)+x(38)+x(39)+x(40)+x(41)+x(42)+x(43)+x(44)+x(45)+x(46)+x(47))-(-0.4+(1-(x(70)*x(3)+x(71)*x(4)+x(72)*x(5)+x(73)*x(6)+x(74)*x(7)+x(75)*x(8)+x(76)*x(9)+x(77)*x(10)+x(78)*x(11)+x(79)*x(12)+x(80)*x(13)+x(81)*x(14)+x(82)*x(15)+x(83)*x(16)+x(84)*x(17)))*(0.4+x(67))+0.4*(x(70)*x(33)+x(71)*x(34)+x(72)*x(35)+x(73)*x(36)+x(74)*x(37)+x(75)*x(38)+x(76)*x(39)+x(77)*x(40)+x(78)*x(41)+x(79)*x(42)+x(80)*x(43)+x(81)*x(44)+x(82)*x(45)+x(83)*x(46)+x(84)*x(47)))*x(68))+x(63);
             -(12.5*((0.8+x(67))^2*(1-(x(85)*x(18)+x(86)*x(19)+x(87)*x(20)+x(88)*x(21)+x(89)*x(22)+x(90)*x(23)+x(91)*x(24)+x(92)*x(25)+x(93)*x(26)+x(94)*x(27)+x(95)*x(28)+x(96)*x(29)+x(97)*x(30)))+0.64*(x(85)*x(48)+x(86)*x(49)+x(87)*x(50)+x(88)*x(51)+x(89)*x(52)+x(90)*x(53)+x(91)*x(54)+x(92)*x(55)+x(93)*x(56)+x(94)*x(57)+x(95)*x(58)+x(96)*x(59)+x(97)*x(60)))+0.02*x(69)*(1+x(69))*(x(48)-(x(85)*x(18)+x(86)*x(19)+x(87)*x(20)+x(88)*x(21)+x(89)*x(22)+x(90)*x(23)+x(91)*x(24)+x(92)*x(25)+x(93)*x(26)+x(94)*x(27)+x(95)*x(28)+x(96)*x(29)+x(97)*x(30)+x(98)*x(31)+x(99)*x(32))+x(49)+x(50)+x(51)+x(52)+x(53)+x(54)+x(55)+x(56)+x(57)+x(58)+x(59)+x(60)+x(61)+x(62))-(-0.8+(1-(x(85)*x(18)+x(86)*x(19)+x(87)*x(20)+x(88)*x(21)+x(89)*x(22)+x(90)*x(23)+x(91)*x(24)+x(92)*x(25)+x(93)*x(26)+x(94)*x(27)+x(95)*x(28)+x(96)*x(29)+x(97)*x(30)+x(98)*x(31)))*(0.8+x(67))+0.8*(x(85)*x(48)+x(86)*x(49)+x(87)*x(50)+x(88)*x(51)+x(89)*x(52)+x(90)*x(53)+x(91)*x(54)+x(92)*x(55)+x(93)*x(56)+x(94)*x(57)+x(95)*x(58)+x(96)*x(59)+x(97)*x(60)+x(98)*x(61)))*x(69))+x(64);
             -((1-(x(70)*x(3)+x(71)*x(4)+x(72)*x(5)+x(73)*x(6)+x(74)*x(7)+x(75)*x(8)+x(76)*x(9)+x(77)*x(10)+x(78)*x(11)+x(79)*x(12)+x(80)*x(13)+x(81)*x(14)+x(82)*x(15)+x(83)*x(16)+x(84)*x(17)))*(14+35*x(67))-(1-(x(70)*x(3)+x(71)*x(4)+x(72)*x(5)+x(73)*x(6)+x(74)*x(7)+x(75)*x(8)+x(76)*x(9)+x(77)*x(10)+x(78)*x(11)+x(79)*x(12)+x(80)*x(13)+x(81)*x(14)+x(82)*x(15)+x(83)*x(16)+x(84)*x(17)))*x(68)+14*(x(70)*x(33)+x(71)*x(34)+x(72)*x(35)+x(73)*x(36)+x(74)*x(37)+x(75)*x(38)+x(76)*x(39)+x(77)*x(40)+x(78)*x(41)+x(79)*x(42)+x(80)*x(43)+x(81)*x(44)+x(82)*x(45)+x(83)*x(46)+x(84)*x(47))+(1-(x(70)*x(33)+x(71)*x(34)+x(72)*x(35)+x(73)*x(36)+x(74)*x(37)+x(75)*x(38)+x(76)*x(39)+x(77)*x(40)+x(78)*x(41)+x(79)*x(42)+x(80)*x(43)+x(81)*x(44)+x(82)*x(45)+x(83)*x(46)+x(84)*x(47)))*x(68))+x(65);
             -((1-(x(85)*x(18)+x(86)*x(19)+x(87)*x(20)+x(88)*x(21)+x(89)*x(22)+x(90)*x(23)+x(91)*x(24)+x(92)*x(25)+x(93)*x(26)+x(94)*x(27)+x(95)*x(28)+x(96)*x(29)+x(97)*x(30)))*(20+25*x(67))-(1-(x(85)*x(18)+x(86)*x(19)+x(87)*x(20)+x(88)*x(21)+x(89)*x(22)+x(90)*x(23)+x(91)*x(24)+x(92)*x(25)+x(93)*x(26)+x(94)*x(27)+x(95)*x(28)+x(96)*x(29)+x(97)*x(30)+x(98)*x(31)))*x(69)+20*(x(85)*x(48)+x(86)*x(49)+x(87)*x(50)+x(88)*x(51)+x(89)*x(52)+x(90)*x(53)+x(91)*x(54)+x(92)*x(55)+x(93)*x(56)+x(94)*x(57)+x(95)*x(58)+x(96)*x(59)+x(97)*x(60))+(1-(x(85)*x(48)+x(86)*x(49)+x(87)*x(50)+x(88)*x(51)+x(89)*x(52)+x(90)*x(53)+x(91)*x(54)+x(92)*x(55)+x(93)*x(56)+x(94)*x(57)+x(95)*x(58)+x(96)*x(59)+x(97)*x(60)+x(98)*x(61)))*x(69))+x(66)];
cl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8.31528719103568e-07,1.16414020674499e-05,8.14898144721496e-05,0.000380285800870031,0.00133100030304511,0.00372680084852631,0.00869586864656137,0.0173917372931228,0.0304355402629648,0.0473441737423897,0.0662818432393456,0.084358709577349,0.0984184945069069,0.105989147930515,0.105989147930515,2.06115362243856e-09,4.12230724487712e-08,4.12230724487711e-07,2.74820482991808e-06,1.37410241495904e-05,5.49640965983615e-05,0.000183213655327872,0.000523467586651062,0.00130866896662765,0.00290815325917256,0.00581630651834512,0.0105751027606275,0.0176251712677125,0.0271156481041731,0.0387366401488187,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-2.8,-8,-14,-20]';
cu = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8.31528719103568e-07,1.16414020674499e-05,8.14898144721496e-05,0.000380285800870031,0.00133100030304511,0.00372680084852631,0.00869586864656137,0.0173917372931228,0.0304355402629648,0.0473441737423897,0.0662818432393456,0.084358709577349,0.0984184945069069,0.105989147930515,0.105989147930515,2.06115362243856e-09,4.12230724487712e-08,4.12230724487711e-07,2.74820482991808e-06,1.37410241495904e-05,5.49640965983615e-05,0.000183213655327872,0.000523467586651062,0.00130866896662765,0.00290815325917256,0.00581630651834512,0.0105751027606275,0.0176251712677125,0.0271156481041731,0.0387366401488187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.8,-8,-14,-20]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCIIBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,0.01,1,1,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_minlp_62');
opts.sense = 'min';
