% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 30-May-2015 13:22:04
% Model: inf_mip_10

% Objective
fun = @(x)x(1);

% Bounds
lb = [-Inf,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(1)-x(2);
             x(1)-x(3);
             x(1)-x(4);
             x(1)-x(5);
             x(1)-x(6);
             x(1)-x(7);
             x(1)-x(8);
             x(1)-x(9);
             x(1)-x(10);
             x(20)+x(23)+x(26);
             x(21)+x(24)+x(27);
             x(22)+x(25)+x(28);
             x(29)+x(32)+x(35);
             x(30)+x(33)+x(36);
             x(31)+x(34)+x(37);
             x(38)+x(41)+x(44);
             x(39)+x(42)+x(45);
             x(40)+x(43)+x(46);
             x(20)+x(21)+x(22)+x(29)+x(30)+x(31)+x(38)+x(39)+x(40);
             x(23)+x(24)+x(25)+x(32)+x(33)+x(34)+x(41)+x(42)+x(43);
             x(26)+x(27)+x(28)+x(35)+x(36)+x(37)+x(44)+x(45)+x(46);
             x(11)+x(12)+x(13);
             x(14)+x(15)+x(16);
             x(17)+x(18)+x(19);
             x(11)+x(12)+x(13);
             x(14)+x(15)+x(16);
             x(17)+x(18)+x(19);
             x(47)+x(50)+x(53);
             x(48)+x(51)+x(54);
             x(49)+x(52)+x(55);
             x(47)+x(48)+x(49);
             x(50)+x(51)+x(52);
             x(53)+x(54)+x(55);
             -14.0001*x(11)+x(20)+x(21)+x(22);
             -14.0001*x(12)+x(23)+x(24)+x(25);
             -14.0001*x(13)+x(26)+x(27)+x(28);
             -14.0001*x(14)+x(29)+x(30)+x(31);
             -14.0001*x(15)+x(32)+x(33)+x(34);
             -14.0001*x(16)+x(35)+x(36)+x(37);
             -14.0001*x(17)+x(38)+x(39)+x(40);
             -14.0001*x(18)+x(41)+x(42)+x(43);
             -14.0001*x(19)+x(44)+x(45)+x(46);
             x(20)+x(23)+x(26)-14.0001*x(47);
             x(21)+x(24)+x(27)-14.0001*x(48);
             x(22)+x(25)+x(28)-14.0001*x(49);
             x(29)+x(32)+x(35)-14.0001*x(50);
             x(30)+x(33)+x(36)-14.0001*x(51);
             x(31)+x(34)+x(37)-14.0001*x(52);
             x(38)+x(41)+x(44)-14.0001*x(53);
             x(39)+x(42)+x(45)-14.0001*x(54);
             x(40)+x(43)+x(46)-14.0001*x(55);
             x(2)-26.6666666666667*x(20)-24*x(23)-10.6666666666667*x(26);
             x(3)-29*x(21)-26.1*x(24)-11.6*x(27);
             x(4)-38.3333333333333*x(22)-34.5*x(25)-15.3333333333333*x(28);
             x(5)-29.3333333333333*x(29)-18.6666666666667*x(32)-13.3333333333333*x(35);
             x(6)-31.9*x(30)-20.3*x(33)-14.5*x(36);
             x(7)-42.1666666666667*x(31)-26.8333333333333*x(34)-19.1666666666667*x(37);
             x(8)-32*x(38)-21.3333333333333*x(41)-16*x(44);
             x(9)-34.8*x(39)-23.2*x(42)-17.4*x(45);
             x(10)-46*x(40)-30.6666666666667*x(43)-23*x(46);
             x(20)+x(21)+x(22)-14.0001*x(56);
             x(23)+x(24)+x(25)-14.0001*x(57);
             x(26)+x(27)+x(28)-14.0001*x(58);
             x(29)+x(30)+x(31)-14.0001*x(59);
             x(32)+x(33)+x(34)-14.0001*x(60);
             x(35)+x(36)+x(37)-14.0001*x(61);
             x(38)+x(39)+x(40)-14.0001*x(62);
             x(41)+x(42)+x(43)-14.0001*x(63);
             x(44)+x(45)+x(46)-14.0001*x(64);
             -0.0001*x(11)+x(20)+x(21)+x(22)+0.0001*x(56);
             -0.0001*x(12)+x(23)+x(24)+x(25)+0.0001*x(57);
             -0.0001*x(13)+x(26)+x(27)+x(28)+0.0001*x(58);
             -0.0001*x(14)+x(29)+x(30)+x(31)+0.0001*x(59);
             -0.0001*x(15)+x(32)+x(33)+x(34)+0.0001*x(60);
             -0.0001*x(16)+x(35)+x(36)+x(37)+0.0001*x(61);
             -0.0001*x(17)+x(38)+x(39)+x(40)+0.0001*x(62);
             -0.0001*x(18)+x(41)+x(42)+x(43)+0.0001*x(63);
             -0.0001*x(19)+x(44)+x(45)+x(46)+0.0001*x(64)];
cl = [0,0,0,0,0,0,0,0,0,11,11,11,7,7,7,14,14,14,-Inf,-Inf,-Inf,2,2,2,-Inf,-Inf,-Inf,1,1,1,1,1,1,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0.0001,0.0001,0.0001,0.0001,0.0001,0.0001,0.0001,0.0001,0.0001]';
cu = [0,0,0,0,0,0,0,0,0,11,11,11,7,7,7,14,14,14,12,8,15,Inf,Inf,Inf,3,3,3,1,1,1,1,1,1,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,0.9999,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,-0.0001,-0.0001,-0.0001,-0.0001,-0.0001,-0.0001,-0.0001,-0.0001,-0.0001,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCBBBBBBBBBIIIIIIIIIIIIIIIIIIIIIIIIIIIBBBBBBBBBBBBBBBBBB';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_mip_10');
opts.sense = 'min';
