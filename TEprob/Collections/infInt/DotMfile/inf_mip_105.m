% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 30-May-2015 13:26:47
% Model: inf_mip_105

% Objective
fun = @(x)x(1)+2*x(2)+4*x(3)+8*x(4)+16*x(5)+32*x(6)+x(7)+2*x(8)+4*x(9)+8*x(10)+16*x(11)+32*x(12)+x(13)+2*x(14)+4*x(15)+8*x(16)+16*x(17)+32*x(18)+x(19)+2*x(20)+4*x(21)+8*x(22)+16*x(23)+32*x(24)+7986;

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[-x(1)+x(7);
             -x(2)+x(8);
             -x(3)+x(9);
             -x(4)+x(10);
             -x(5)+x(11);
             -x(6)+x(12);
             -x(7)+x(13);
             -x(8)+x(14);
             -x(9)+x(15);
             -x(10)+x(16);
             -x(11)+x(17);
             -x(12)+x(18);
             -x(13)+x(19);
             -x(14)+x(20);
             -x(15)+x(21);
             -x(16)+x(22);
             -x(17)+x(23);
             -x(18)+x(24);
             -x(19);
             -x(20);
             -x(21);
             -x(22);
             -x(23);
             -x(24);
             x(25)+x(43);
             x(26)+x(44);
             x(27)+x(45);
             x(28)+x(46);
             x(29)+x(47);
             x(30)+x(48);
             x(31)+x(61);
             x(32)+x(62);
             x(33)+x(63);
             x(34)+x(64);
             x(35)+x(65);
             x(36)+x(66);
             x(37)+x(79);
             x(38)+x(80);
             x(39)+x(81);
             x(40)+x(82);
             x(41)+x(83);
             x(42)+x(84);
             x(25)+x(43);
             x(26)+x(44);
             x(27)+x(45);
             x(28)+x(46);
             x(29)+x(47);
             x(30)+x(48);
             x(49)+x(67);
             x(50)+x(68);
             x(51)+x(69);
             x(52)+x(70);
             x(53)+x(71);
             x(54)+x(72);
             x(55)+x(85);
             x(56)+x(86);
             x(57)+x(87);
             x(58)+x(88);
             x(59)+x(89);
             x(60)+x(90);
             x(31)+x(61);
             x(32)+x(62);
             x(33)+x(63);
             x(34)+x(64);
             x(35)+x(65);
             x(36)+x(66);
             x(49)+x(67);
             x(50)+x(68);
             x(51)+x(69);
             x(52)+x(70);
             x(53)+x(71);
             x(54)+x(72);
             x(73)+x(91);
             x(74)+x(92);
             x(75)+x(93);
             x(76)+x(94);
             x(77)+x(95);
             x(78)+x(96);
             x(37)+x(79);
             x(38)+x(80);
             x(39)+x(81);
             x(40)+x(82);
             x(41)+x(83);
             x(42)+x(84);
             x(55)+x(85);
             x(56)+x(86);
             x(57)+x(87);
             x(58)+x(88);
             x(59)+x(89);
             x(60)+x(90);
             x(73)+x(91);
             x(74)+x(92);
             x(75)+x(93);
             x(76)+x(94);
             x(77)+x(95);
             x(78)+x(96);
             -x(1)+x(7)-99999999*x(25);
             -x(2)+x(8)-99999999*x(26);
             -x(3)+x(9)-99999999*x(27);
             -x(4)+x(10)-99999999*x(28);
             -x(5)+x(11)-99999999*x(29);
             -x(6)+x(12)-99999999*x(30);
             -x(1)+x(13)-99999999*x(31);
             -x(2)+x(14)-99999999*x(32);
             -x(3)+x(15)-99999999*x(33);
             -x(4)+x(16)-99999999*x(34);
             -x(5)+x(17)-99999999*x(35);
             -x(6)+x(18)-99999999*x(36);
             -x(1)+x(19)-99999999*x(37);
             -x(2)+x(20)-99999999*x(38);
             -x(3)+x(21)-99999999*x(39);
             -x(4)+x(22)-99999999*x(40);
             -x(5)+x(23)-99999999*x(41);
             -x(6)+x(24)-99999999*x(42);
             x(1)-x(7)-99999999*x(43);
             x(2)-x(8)-99999999*x(44);
             x(3)-x(9)-99999999*x(45);
             x(4)-x(10)-99999999*x(46);
             x(5)-x(11)-99999999*x(47);
             x(6)-x(12)-99999999*x(48);
             -x(7)+x(13)-99999999*x(49);
             -x(8)+x(14)-99999999*x(50);
             -x(9)+x(15)-99999999*x(51);
             -x(10)+x(16)-99999999*x(52);
             -x(11)+x(17)-99999999*x(53);
             -x(12)+x(18)-99999999*x(54);
             -x(7)+x(19)-99999999*x(55);
             -x(8)+x(20)-99999999*x(56);
             -x(9)+x(21)-99999999*x(57);
             -x(10)+x(22)-99999999*x(58);
             -x(11)+x(23)-99999999*x(59);
             -x(12)+x(24)-99999999*x(60);
             x(1)-x(13)-99999999*x(61);
             x(2)-x(14)-99999999*x(62);
             x(3)-x(15)-99999999*x(63);
             x(4)-x(16)-99999999*x(64);
             x(5)-x(17)-99999999*x(65);
             x(6)-x(18)-99999999*x(66);
             x(7)-x(13)-99999999*x(67);
             x(8)-x(14)-99999999*x(68);
             x(9)-x(15)-99999999*x(69);
             x(10)-x(16)-99999999*x(70);
             x(11)-x(17)-99999999*x(71);
             x(12)-x(18)-99999999*x(72);
             -x(13)+x(19)-99999999*x(73);
             -x(14)+x(20)-99999999*x(74);
             -x(15)+x(21)-99999999*x(75);
             -x(16)+x(22)-99999999*x(76);
             -x(17)+x(23)-99999999*x(77);
             -x(18)+x(24)-99999999*x(78);
             x(1)-x(19)-99999999*x(79);
             x(2)-x(20)-99999999*x(80);
             x(3)-x(21)-99999999*x(81);
             x(4)-x(22)-99999999*x(82);
             x(5)-x(23)-99999999*x(83);
             x(6)-x(24)-99999999*x(84);
             x(7)-x(19)-99999999*x(85);
             x(8)-x(20)-99999999*x(86);
             x(9)-x(21)-99999999*x(87);
             x(10)-x(22)-99999999*x(88);
             x(11)-x(23)-99999999*x(89);
             x(12)-x(24)-99999999*x(90);
             x(13)-x(19)-99999999*x(91);
             x(14)-x(20)-99999999*x(92);
             x(15)-x(21)-99999999*x(93);
             x(16)-x(22)-99999999*x(94);
             x(17)-x(23)-99999999*x(95);
             x(18)-x(24)-99999999*x(96)];
cl = [3,16,50,100,20,34,5,15,20,130,23,30,7,14,10,10,20,21,3,15,30,110,19,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-99999996,-99999983,-99999949,-99999899,-99999979,-99999965,-99999996,-99999983,-99999949,-99999899,-99999979,-99999965,-99999996,-99999983,-99999949,-99999899,-99999979,-99999965,-99999994,-99999984,-99999979,-99999869,-99999976,-99999969,-99999994,-99999984,-99999979,-99999869,-99999976,-99999969,-99999994,-99999984,-99999979,-99999869,-99999976,-99999969,-99999992,-99999985,-99999989,-99999989,-99999979,-99999978,-99999992,-99999985,-99999989,-99999989,-99999979,-99999978,-99999992,-99999985,-99999989,-99999989,-99999979,-99999978,-99999996,-99999984,-99999969,-99999889,-99999980,-99999981,-99999996,-99999984,-99999969,-99999889,-99999980,-99999981,-99999996,-99999984,-99999969,-99999889,-99999980,-99999981]';
cu = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_mip_105');
opts.sense = 'min';
