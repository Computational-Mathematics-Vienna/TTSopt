% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 01-Jun-2015 14:31:26
% Model: inf_nlp_94

% Objective
fun = @(x)4*x(1)+x(2)-5*x(3)-4*x(4)-2*x(5)-x(6)-8*x(7)+3*x(8)+4*x(9)-9*x(10);

% Bounds
lb = [-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(6);
             x(7);
             x(8);
             x(9);
             x(10);
             2*x(6)+x(7)+5*x(8)-2*x(9)-5*x(10);
             3*x(6)-x(7)-4*x(8)+3*x(9)+4*x(10);
             x(6)-3*x(7)-3*x(8)-4*x(10);
             -5*x(6)-2*x(7)+3*x(8)+2*x(9)+3*x(10);
             -5*x(7)+2*x(8)-2*x(10);
             x(6)-x(7)+5*x(8)+x(9)+3*x(10);
             -5*x(6)-2*x(7)-4*x(8)-2*x(9)+3*x(10);
             -3*x(7)+3*x(8)+2*x(9)-3*x(10);
             x(6)-x(7)-5*x(8)+4*x(9)+3*x(10);
             4*x(6)-x(7)+5*x(9)+5*x(10);
             3*x(6)+2*x(7)+2*x(8)+4*x(9)+5*x(10);
             5*x(6)+3*x(7)+5*x(8)+3*x(9)+2*x(10);
             3*x(6)+2*x(7)+5*x(8)+2*x(9)+2*x(10);
             4*x(6)+3*x(7)+5*x(8)+2*x(9)+3*x(10);
             5*x(6)+4*x(7)+3*x(8)+3*x(9)+3*x(10);
             4*x(6)+4*x(7)+5*x(8)+3*x(9)+4*x(10);
             4*x(6)+4*x(7)+4*x(8)+4*x(9)+2*x(10);
             3*x(6)+5*x(7)+2*x(8)+5*x(9)+5*x(10);
             4*x(6)+4*x(7)+3*x(8)+2*x(9)+2*x(10);
             3*x(6)+3*x(7)+5*x(8)+5*x(9)+5*x(10);
             x(1)+x(6)-3*x(11)-5*x(12)-3*x(13)-4*x(14)-5*x(15)-4*x(16)-4*x(17)-3*x(18)-4*x(19)-3*x(20);
             x(2)+x(7)-2*x(11)-3*x(12)-2*x(13)-3*x(14)-4*x(15)-4*x(16)-4*x(17)-5*x(18)-4*x(19)-3*x(20);
             x(3)+x(8)-2*x(11)-5*x(12)-5*x(13)-5*x(14)-3*x(15)-5*x(16)-4*x(17)-2*x(18)-3*x(19)-5*x(20);
             x(4)+x(9)-4*x(11)-3*x(12)-2*x(13)-2*x(14)-3*x(15)-3*x(16)-4*x(17)-5*x(18)-2*x(19)-5*x(20);
             x(5)+x(10)-5*x(11)-2*x(12)-2*x(13)-3*x(14)-3*x(15)-4*x(16)-2*x(17)-5*x(18)-2*x(19)-5*x(20);
             x(11)*(3*x(6)+2*x(7)+2*x(8)+4*x(9)+5*x(10))+x(12)*(5*x(6)+3*x(7)+5*x(8)+3*x(9)+2*x(10))+x(13)*(3*x(6)+2*x(7)+5*x(8)+2*x(9)+2*x(10))+x(14)*(4*x(6)+3*x(7)+5*x(8)+2*x(9)+3*x(10))+x(15)*(5*x(6)+4*x(7)+3*x(8)+3*x(9)+3*x(10))+x(16)*(4*x(6)+4*x(7)+5*x(8)+3*x(9)+4*x(10))+x(17)*(4*x(6)+4*x(7)+4*x(8)+4*x(9)+2*x(10))+x(18)*(3*x(6)+5*x(7)+2*x(8)+5*x(9)+5*x(10))+x(19)*(4*x(6)+4*x(7)+3*x(8)+2*x(9)+2*x(10))+x(20)*(3*x(6)+3*x(7)+5*x(8)+5*x(9)+5*x(10))];
cl = [-Inf,-Inf,-Inf,-Inf,-Inf,0,2,-5,0,-3,4,-5.5,-1,0.5,6,15,17,13,16,17,19,17,19,14,20,0,0,0,0,0,167]';
cu = [1,1,1,1,1,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,0,0,0,0,0,167]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCC';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_nlp_94');
opts.sense = 'min';
