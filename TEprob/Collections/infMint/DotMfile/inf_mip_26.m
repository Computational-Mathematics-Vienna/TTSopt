% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 30-May-2015 14:26:07
% Model: inf_mip_26

% Objective
fun = @(x)4.63*x(1)+4.63*x(2)+4.63*x(3)+4.63*x(4)+4.63*x(5)+3.12*x(6)+3.08*x(7)+3.12*x(8)+3.12*x(9)+3.12*x(10)+4.94*x(11)+4.94*x(12)+4.94*x(13)+4.94*x(14)+4.94*x(15)+3.54*x(16)+3.54*x(17)+3.54*x(18)+3.54*x(19)+3.54*x(20)+3.96*x(21)+3.96*x(22)+3.23*x(23)+3.96*x(24)+3.96*x(25)+5.26*x(26)+5.26*x(27)+5.26*x(28)+5.26*x(29)+5.26*x(30)+3.9*x(31)+3.9*x(32)+3.9*x(33)+3.9*x(34)+3.9*x(35)+4.58*x(36)+4.58*x(37)+4.58*x(38)+4.58*x(39)+4.58*x(40)+3.38*x(41)+3.38*x(42)+3.38*x(43)+4.78*x(44)+3.38*x(45)+4.01*x(46)+4.01*x(47)+4.01*x(48)+4.01*x(49)+4.01*x(50)+3.44*x(51)+3.44*x(52)+3.44*x(53)+3.44*x(54)+3.44*x(55)+2.64*x(56)+2.64*x(57)+2.64*x(58)+2.64*x(59)+2.64*x(60)+3.12*x(61)+3.12*x(62)+3.12*x(63)+3.12*x(64)+3.12*x(65)+3.64*x(66)+3.64*x(67)+3.64*x(68)+3.64*x(69)+3.77*x(70)+2.84*x(71)+2.84*x(72)+2.84*x(73)+2.84*x(74)+2.84*x(75)+3.49*x(76)+3.49*x(77)+3.49*x(78)+3.49*x(79)+3.49*x(80)+3.18*x(81)+3.18*x(82)+3.18*x(83)+3.18*x(84)+3.18*x(85)+2.84*x(86)+2.84*x(87)+2.84*x(88)+2.84*x(89)+2.84*x(90)+3.9*x(91)+3.9*x(92)+3.9*x(93)+3.9*x(94)+3.9*x(95)+0.33*x(96)+0.33*x(97)+0.33*x(98)+0.33*x(99)+0.33*x(100)+0.33*x(101)+0.33*x(102)+0.33*x(103)+0.33*x(104)+0.33*x(105)+0.33*x(106)+0.33*x(107)+0.33*x(108)+0.33*x(109)+0.33*x(110)+0.33*x(111)+0.33*x(112)+0.33*x(113)+0.33*x(114)+0.33*x(115);

% Bounds
lb = [-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(1)+x(2)+x(3)+x(4)+x(5);
             x(1)-x(6);
             x(2)-x(7);
             x(3)-x(8);
             x(4)-x(9);
             x(5)-x(10);
             x(6)-x(11);
             x(7)-x(12);
             x(8)-x(13);
             x(9)-x(14);
             x(10)-x(15);
             x(11)-x(16);
             x(12)-x(17);
             x(13)-x(18);
             x(14)-x(19);
             x(15)-x(20);
             x(16)-x(21);
             x(17)-x(22);
             x(18)-x(23);
             x(19)-x(24);
             x(20)-x(25);
             x(21)-x(26);
             x(22)-x(27);
             x(23)-x(28);
             x(24)-x(29);
             x(25)-x(30);
             x(26)-x(31);
             x(27)-x(32);
             x(28)-x(33);
             x(29)-x(34);
             x(30)-x(35);
             x(31)-x(36);
             x(32)-x(37);
             x(33)-x(38);
             x(34)-x(39);
             x(35)-x(40);
             x(36);
             x(37);
             x(38);
             x(39);
             x(40);
             -x(41);
             -x(42);
             -x(43);
             -x(44);
             -x(45);
             x(41)-x(46);
             x(42)-x(47);
             x(43)-x(48);
             x(44)-x(49);
             x(45)-x(50);
             x(46);
             x(47);
             x(48);
             x(49);
             x(50);
             -x(51);
             -x(52);
             -x(53);
             -x(54);
             -x(55);
             x(51)-x(56);
             x(52)-x(57);
             x(53)-x(58);
             x(54)-x(59);
             x(55)-x(60);
             x(56)-x(61);
             x(57)-x(62);
             x(58)-x(63);
             x(59)-x(64);
             x(60)-x(65);
             x(61)-x(66);
             x(62)-x(67);
             x(63)-x(68);
             x(64)-x(69);
             x(65)-x(70);
             x(66)-x(71);
             x(67)-x(72);
             x(68)-x(73);
             x(69)-x(74);
             x(70)-x(75);
             x(71)-x(76);
             x(72)-x(77);
             x(73)-x(78);
             x(74)-x(79);
             x(75)-x(80);
             x(76)-x(81);
             x(77)-x(82);
             x(78)-x(83);
             x(79)-x(84);
             x(80)-x(85);
             x(81)-x(86);
             x(82)-x(87);
             x(83)-x(88);
             x(84)-x(89);
             x(85)-x(90);
             x(86)-x(91);
             x(87)-x(92);
             x(88)-x(93);
             x(89)-x(94);
             x(90)-x(95);
             x(1);
             x(2);
             x(3);
             x(4);
             x(5);
             x(6)+2*x(11)+x(16)+x(21)+x(26)+2*x(31)+x(36)+2*x(41)+x(46)+2*x(51)+x(56)+x(61)+x(66)+x(71)+x(76)+x(81)+x(86)+2*x(91);
             x(7)+2*x(12)+x(17)+x(22)+x(27)+2*x(32)+x(37)+2*x(42)+x(47)+2*x(52)+x(57)+x(62)+x(67)+x(72)+x(77)+x(82)+x(87)+2*x(92);
             x(8)+2*x(13)+x(18)+x(23)+x(28)+2*x(33)+x(38)+2*x(43)+x(48)+2*x(53)+x(58)+x(63)+x(68)+x(73)+x(78)+x(83)+x(88)+2*x(93);
             x(9)+2*x(14)+x(19)+x(24)+x(29)+2*x(34)+x(39)+2*x(44)+x(49)+2*x(54)+x(59)+x(64)+x(69)+x(74)+x(79)+x(84)+x(89)+2*x(94);
             x(10)+2*x(15)+x(20)+x(25)+x(30)+2*x(35)+x(40)+2*x(45)+x(50)+2*x(55)+x(60)+x(65)+x(70)+x(75)+x(80)+x(85)+x(90)+2*x(95);
             x(116);
             -45*x(96)+x(117);
             -55*x(97)+x(118);
             -x(98)+x(119);
             -8*x(99)+x(120);
             -14*x(100)+x(121);
             x(122);
             -31*x(101)+x(123);
             -39*x(102)+x(124);
             -45*x(103)+x(125);
             -51*x(104)+x(126);
             x(127);
             -58*x(105)+x(128);
             -5*x(106)+x(129);
             -11*x(107)+x(130);
             -17*x(108)+x(131);
             -26*x(109)+x(132);
             -35*x(110)+x(133);
             x(134);
             -45*x(111)+x(135);
             -53*x(112)+x(136);
             -59*x(113)+x(137);
             -6*x(114)+x(138);
             -23*x(115)+x(139);
             x(140);
             x(116);
             x(117);
             x(118);
             x(119);
             x(120);
             x(121);
             x(122);
             x(123);
             x(124);
             x(125);
             x(126);
             x(127);
             x(128);
             x(129);
             x(130);
             x(131);
             x(132);
             x(133);
             x(134);
             x(135);
             x(136);
             x(137);
             x(138);
             x(139);
             x(140)];
cl = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0,43,53,57,6,12,0,29,43,37,49,0,56,3,9,15,24,32,0,43,51,57,4,21,0]';
cu = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_mip_26');
opts.sense = 'min';
