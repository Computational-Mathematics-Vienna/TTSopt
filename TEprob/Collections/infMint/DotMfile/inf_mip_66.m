% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 30-May-2015 17:03:36
% Model: inf_mip_66

% Objective
fun = @(x)2.6505*x(1)+2.6505*x(2)+2.6505*x(3)+2.6505*x(4)+1.1405*x(5)+1.1005*x(6)+1.1405*x(7)+1.1405*x(8)+2.9605*x(9)+2.9605*x(10)+2.9605*x(11)+2.9605*x(12)+1.5605*x(13)+1.5605*x(14)+1.5605*x(15)+1.5605*x(16)+1.9805*x(17)+1.9805*x(18)+1.2505*x(19)+1.5005*x(20)+3.2805*x(21)+3.2805*x(22)+3.2805*x(23)+3.2805*x(24)+1.9205*x(25)+1.9205*x(26)+1.9205*x(27)+1.9205*x(28)+2.6005*x(29)+2.6005*x(30)+2.6005*x(31)+2.6005*x(32)+2.1805*x(33)+2.1805*x(34)+2.1805*x(35)+2.1805*x(36)+1.5205*x(37)+1.5205*x(38)+1.4005*x(39)+1.4005*x(40)+2.0305*x(41)+2.0305*x(42)+2.0305*x(43)+2.0305*x(44)+2.2405*x(45)+2.2405*x(46)+2.2405*x(47)+2.2405*x(48)+1.4605*x(49)+1.4605*x(50)+1.4605*x(51)+1.4605*x(52)+0.6605*x(53)+0.6605*x(54)+0.6605*x(55)+0.6605*x(56)+1.1405*x(57)+1.1405*x(58)+1.1405*x(59)+1.1405*x(60)+1.6605*x(61)+1.6605*x(62)+1.6605*x(63)+1.6605*x(64)+0.8605*x(65)+0.8605*x(66)+0.8605*x(67)+0.8605*x(68)+1.5105*x(69)+1.5105*x(70)+1.5105*x(71)+1.5105*x(72)+1.2005*x(73)+1.2005*x(74)+1.2005*x(75)+1.2005*x(76)+0.8605*x(77)+0.8605*x(78)+0.8605*x(79)+0.8605*x(80)+1.9205*x(81)+1.9205*x(82)+1.9205*x(83)+1.9205*x(84)+0.33*x(85)+0.33*x(86)+0.33*x(87)+0.33*x(88)+0.33*x(89)+0.33*x(90)+0.33*x(91)+0.33*x(92)+0.33*x(93)+0.33*x(94)+0.33*x(95)+0.33*x(96)+0.33*x(97)+0.33*x(98)+0.33*x(99)+0.33*x(100)+0.33*x(101)+0.33*x(102)+0.33*x(103)+0.33*x(104);

% Bounds
lb = [-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(1)+x(2)+x(3)+x(4);
             x(5)+x(6)+x(7)+x(8);
             x(9)+x(10)+x(11)+x(12);
             x(13)+x(14)+x(15)+x(16);
             x(17)+x(18)+x(19)+x(20);
             x(21)+x(22)+x(23)+x(24);
             x(25)+x(26)+x(27)+x(28);
             x(29)+x(30)+x(31)+x(32);
             x(33)+x(34)+x(35)+x(36);
             x(37)+x(38)+x(39)+x(40);
             x(41)+x(42)+x(43)+x(44);
             x(45)+x(46)+x(47)+x(48);
             x(49)+x(50)+x(51)+x(52);
             x(53)+x(54)+x(55)+x(56);
             x(57)+x(58)+x(59)+x(60);
             x(61)+x(62)+x(63)+x(64);
             x(65)+x(66)+x(67)+x(68);
             x(69)+x(70)+x(71)+x(72);
             x(73)+x(74)+x(75)+x(76);
             x(77)+x(78)+x(79)+x(80);
             x(1)-x(5);
             x(2)-x(6);
             x(3)-x(7);
             x(4)-x(8);
             x(5)-x(9);
             x(6)-x(10);
             x(7)-x(11);
             x(8)-x(12);
             x(9)-x(13);
             x(10)-x(14);
             x(11)-x(15);
             x(12)-x(16);
             x(13)-x(17);
             x(14)-x(18);
             x(15)-x(19);
             x(16)-x(20);
             x(17)-x(21);
             x(18)-x(22);
             x(19)-x(23);
             x(20)-x(24);
             x(21)-x(25);
             x(22)-x(26);
             x(23)-x(27);
             x(24)-x(28);
             x(25)-x(29);
             x(26)-x(30);
             x(27)-x(31);
             x(28)-x(32);
             x(29)-x(33);
             x(30)-x(34);
             x(31)-x(35);
             x(32)-x(36);
             x(33)-x(37);
             x(34)-x(38);
             x(35)-x(39);
             x(36)-x(40);
             x(37)-x(41);
             x(38)-x(42);
             x(39)-x(43);
             x(40)-x(44);
             x(41)-x(45);
             x(42)-x(46);
             x(43)-x(47);
             x(44)-x(48);
             x(45)-x(49);
             x(46)-x(50);
             x(47)-x(51);
             x(48)-x(52);
             x(49)-x(53);
             x(50)-x(54);
             x(51)-x(55);
             x(52)-x(56);
             x(53)-x(57);
             x(54)-x(58);
             x(55)-x(59);
             x(56)-x(60);
             x(57)-x(61);
             x(58)-x(62);
             x(59)-x(63);
             x(60)-x(64);
             x(61)-x(65);
             x(62)-x(66);
             x(63)-x(67);
             x(64)-x(68);
             x(65)-x(69);
             x(66)-x(70);
             x(67)-x(71);
             x(68)-x(72);
             x(69)-x(73);
             x(70)-x(74);
             x(71)-x(75);
             x(72)-x(76);
             x(73)-x(77);
             x(74)-x(78);
             x(75)-x(79);
             x(76)-x(80);
             x(77)-x(81);
             x(78)-x(82);
             x(79)-x(83);
             x(80)-x(84);
             x(1);
             x(2);
             x(3);
             x(4);
             x(5)+2*x(9)+x(13)+x(17)+x(21)+2*x(25)+x(29)+x(33)+2*x(37)+x(41)+x(45)+2*x(49)+x(53)+x(57)+x(61)+x(65)+x(69)+x(73)+x(77)+2*x(81);
             x(6)+2*x(10)+x(14)+x(18)+x(22)+2*x(26)+x(30)+x(34)+2*x(38)+x(42)+x(46)+2*x(50)+x(54)+x(58)+x(62)+x(66)+x(70)+x(74)+x(78)+2*x(82);
             x(7)+2*x(11)+x(15)+x(19)+x(23)+2*x(27)+x(31)+x(35)+2*x(39)+x(43)+x(47)+2*x(51)+x(55)+x(59)+x(63)+x(67)+x(71)+x(75)+x(79)+2*x(83);
             x(8)+2*x(12)+x(16)+x(20)+x(24)+2*x(28)+x(32)+x(36)+2*x(40)+x(44)+x(48)+2*x(52)+x(56)+x(60)+x(64)+x(68)+x(72)+x(76)+x(80)+2*x(84);
             -x(85)+x(105);
             -x(86)+x(106);
             -x(87)+x(107);
             -x(88)+x(108);
             -x(89)+x(109);
             -x(90)+x(110);
             -x(91)+x(111);
             -x(92)+x(112);
             -x(93)+x(113);
             -x(94)+x(114);
             -x(95)+x(115);
             -x(96)+x(116);
             -x(97)+x(117);
             -x(98)+x(118);
             -x(99)+x(119);
             -x(100)+x(120);
             -x(101)+x(121);
             -x(102)+x(122);
             -x(103)+x(123);
             -x(104)+x(124);
             x(105);
             x(106);
             x(107);
             x(108);
             x(109);
             x(110);
             x(111);
             x(112);
             x(113);
             x(114);
             x(115);
             x(116);
             x(117);
             x(118);
             x(119);
             x(120);
             x(121);
             x(122);
             x(123);
             x(124);
             100000*x(5)+x(105)-x(106);
             100000*x(6)+x(105)-x(106);
             100000*x(7)+x(105)-x(106);
             100000*x(8)+x(105)-x(106);
             100000*x(9)+x(106)-x(107);
             100000*x(10)+x(106)-x(107);
             100000*x(11)+x(106)-x(107);
             100000*x(12)+x(106)-x(107);
             100000*x(13)+x(107)-x(108);
             100000*x(14)+x(107)-x(108);
             100000*x(15)+x(107)-x(108);
             100000*x(16)+x(107)-x(108);
             100000*x(17)+x(108)-x(109);
             100000*x(18)+x(108)-x(109);
             100000*x(19)+x(108)-x(109);
             100000*x(20)+x(108)-x(109);
             100000*x(21)+x(109)-x(110);
             100000*x(22)+x(109)-x(110);
             100000*x(23)+x(109)-x(110);
             100000*x(24)+x(109)-x(110);
             100000*x(25)+x(110)-x(111);
             100000*x(26)+x(110)-x(111);
             100000*x(27)+x(110)-x(111);
             100000*x(28)+x(110)-x(111);
             100000*x(29)+x(111)-x(112);
             100000*x(30)+x(111)-x(112);
             100000*x(31)+x(111)-x(112);
             100000*x(32)+x(111)-x(112);
             100000*x(33)+x(112)-x(113);
             100000*x(34)+x(112)-x(113);
             100000*x(35)+x(112)-x(113);
             100000*x(36)+x(112)-x(113);
             100000*x(37)+x(113)-x(114);
             100000*x(38)+x(113)-x(114);
             100000*x(39)+x(113)-x(114);
             100000*x(40)+x(113)-x(114);
             100000*x(41)+x(114)-x(115);
             100000*x(42)+x(114)-x(115);
             100000*x(43)+x(114)-x(115);
             100000*x(44)+x(114)-x(115);
             100000*x(45)+x(115)-x(116);
             100000*x(46)+x(115)-x(116);
             100000*x(47)+x(115)-x(116);
             100000*x(48)+x(115)-x(116);
             100000*x(49)+x(116)-x(117);
             100000*x(50)+x(116)-x(117);
             100000*x(51)+x(116)-x(117);
             100000*x(52)+x(116)-x(117);
             100000*x(53)+x(117)-x(118);
             100000*x(54)+x(117)-x(118);
             100000*x(55)+x(117)-x(118);
             100000*x(56)+x(117)-x(118);
             100000*x(57)+x(118)-x(119);
             100000*x(58)+x(118)-x(119);
             100000*x(59)+x(118)-x(119);
             100000*x(60)+x(118)-x(119);
             100000*x(61)+x(119)-x(120);
             100000*x(62)+x(119)-x(120);
             100000*x(63)+x(119)-x(120);
             100000*x(64)+x(119)-x(120);
             100000*x(65)+x(120)-x(121);
             100000*x(66)+x(120)-x(121);
             100000*x(67)+x(120)-x(121);
             100000*x(68)+x(120)-x(121);
             100000*x(69)+x(121)-x(122);
             100000*x(70)+x(121)-x(122);
             100000*x(71)+x(121)-x(122);
             100000*x(72)+x(121)-x(122);
             100000*x(73)+x(122)-x(123);
             100000*x(74)+x(122)-x(123);
             100000*x(75)+x(122)-x(123);
             100000*x(76)+x(122)-x(123);
             100000*x(77)+x(123)-x(124);
             100000*x(78)+x(123)-x(124);
             100000*x(79)+x(123)-x(124);
             100000*x(80)+x(123)-x(124);
             x(81);
             x(82);
             x(83);
             x(84)];
cl = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
cu = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,20,20,20,20,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,99996,99996.32,99996,99996,99995,99995,99995,99995,99990,99990,99990,99990,99994,99994,99995,99994,99991,99991,99991,99991,99990,99990,99990,99990,99995,99995,99995,99995,99992,99992,99992,99992,99993,99993,99993,99997,99993,99993,99993,99993,99993,99993,99993,99993,99992,99992,99992,99992,99994,99994,99994,99994,99997,99997,99997,99997,99996,99996,99996,99996,99993,99993,99993,99993,99997,99997,99997,99997,99996,99996,99996,99996,99993,99993,99993,99993,1,1,1,1]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','inf_mip_66');
opts.sense = 'min';
