% MATLAB - BARON Interface [J.Currie I2C2]
% Interface Version: v1.39 [22/05/12]
% File Generated: 22-May-2012 11:19:06
% Model: m6

% Objective
fun = @(x)2.4*x(31)+2.4*x(32)+12*x(49)+12*x(50)+12*x(57)+12*x(58)+6*x(59)+6*x(60);

% Bounds
lb = [-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,2.8,2,1.8,1.2247,2,5,15,1.8708,1.5811,1.5,1.2247,1.5811,2.5,5,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,7.4833,6.3246,6,4.899,6.3246,10,15,5,5,5,4.899,5,5,5,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[x(75)-x(76);
             0.5*x(61)-x(67)+x(75);
             0.5*x(61)-x(75);
             0.5*x(68)-x(74)+x(81);
             0.5*x(68)-x(81);
             0.5*x(62)-x(67)+x(76);
             0.5*x(62)-x(76);
             0.5*x(69)-x(74)+x(82);
             0.5*x(69)-x(82);
             0.5*x(63)-x(67)+x(77);
             0.5*x(63)-x(77);
             0.5*x(70)-x(74)+x(83);
             0.5*x(70)-x(83);
             0.5*x(64)-x(67)+x(78);
             0.5*x(64)-x(78);
             0.5*x(71)-x(74)+x(84);
             0.5*x(71)-x(84);
             0.5*x(65)-x(67)+x(79);
             0.5*x(65)-x(79);
             0.5*x(72)-x(74)+x(85);
             0.5*x(72)-x(85);
             0.5*x(66)-x(67)+x(80);
             0.5*x(66)-x(80);
             0.5*x(73)-x(74)+x(86);
             0.5*x(73)-x(86);
             -x(31)+x(75)-x(76);
             -x(31)-x(75)+x(76);
             -x(32)+x(81)-x(82);
             -x(32)-x(81)+x(82);
             -15*x(1)-15*x(2)+0.5*x(61)+0.5*x(62)-x(75)+x(76);
             -15*x(1)+15*x(2)+0.5*x(61)+0.5*x(62)+x(75)-x(76);
             5*x(1)-5*x(2)+0.5*x(68)+0.5*x(69)-x(81)+x(82);
             5*x(1)+5*x(2)+0.5*x(68)+0.5*x(69)+x(81)-x(82);
             -x(33)+x(75)-x(77);
             -x(33)-x(75)+x(77);
             -x(34)+x(81)-x(83);
             -x(34)-x(81)+x(83);
             -15*x(3)-15*x(4)+0.5*x(61)+0.5*x(63)-x(75)+x(77);
             -15*x(3)+15*x(4)+0.5*x(61)+0.5*x(63)+x(75)-x(77);
             5*x(3)-5*x(4)+0.5*x(68)+0.5*x(70)-x(81)+x(83);
             5*x(3)+5*x(4)+0.5*x(68)+0.5*x(70)+x(81)-x(83);
             -x(35)+x(75)-x(78);
             -x(35)-x(75)+x(78);
             -x(36)+x(81)-x(84);
             -x(36)-x(81)+x(84);
             -15*x(5)-15*x(6)+0.5*x(61)+0.5*x(64)-x(75)+x(78);
             -15*x(5)+15*x(6)+0.5*x(61)+0.5*x(64)+x(75)-x(78);
             5*x(5)-5*x(6)+0.5*x(68)+0.5*x(71)-x(81)+x(84);
             5*x(5)+5*x(6)+0.5*x(68)+0.5*x(71)+x(81)-x(84);
             -x(37)+x(75)-x(79);
             -x(37)-x(75)+x(79);
             -x(38)+x(81)-x(85);
             -x(38)-x(81)+x(85);
             -15*x(7)-15*x(8)+0.5*x(61)+0.5*x(65)-x(75)+x(79);
             -15*x(7)+15*x(8)+0.5*x(61)+0.5*x(65)+x(75)-x(79);
             5*x(7)-5*x(8)+0.5*x(68)+0.5*x(72)-x(81)+x(85);
             5*x(7)+5*x(8)+0.5*x(68)+0.5*x(72)+x(81)-x(85);
             -x(39)+x(75)-x(80);
             -x(39)-x(75)+x(80);
             -x(40)+x(81)-x(86);
             -x(40)-x(81)+x(86);
             -15*x(9)-15*x(10)+0.5*x(61)+0.5*x(66)-x(75)+x(80);
             -15*x(9)+15*x(10)+0.5*x(61)+0.5*x(66)+x(75)-x(80);
             5*x(9)-5*x(10)+0.5*x(68)+0.5*x(73)-x(81)+x(86);
             5*x(9)+5*x(10)+0.5*x(68)+0.5*x(73)+x(81)-x(86);
             -x(41)+x(76)-x(77);
             -x(41)-x(76)+x(77);
             -x(42)+x(82)-x(83);
             -x(42)-x(82)+x(83);
             -15*x(11)-15*x(12)+0.5*x(62)+0.5*x(63)-x(76)+x(77);
             -15*x(11)+15*x(12)+0.5*x(62)+0.5*x(63)+x(76)-x(77);
             5*x(11)-5*x(12)+0.5*x(69)+0.5*x(70)-x(82)+x(83);
             5*x(11)+5*x(12)+0.5*x(69)+0.5*x(70)+x(82)-x(83);
             -x(43)+x(76)-x(78);
             -x(43)-x(76)+x(78);
             -x(44)+x(82)-x(84);
             -x(44)-x(82)+x(84);
             -15*x(13)-15*x(14)+0.5*x(62)+0.5*x(64)-x(76)+x(78);
             -15*x(13)+15*x(14)+0.5*x(62)+0.5*x(64)+x(76)-x(78);
             5*x(13)-5*x(14)+0.5*x(69)+0.5*x(71)-x(82)+x(84);
             5*x(13)+5*x(14)+0.5*x(69)+0.5*x(71)+x(82)-x(84);
             -x(45)+x(76)-x(79);
             -x(45)-x(76)+x(79);
             -x(46)+x(82)-x(85);
             -x(46)-x(82)+x(85);
             -15*x(15)-15*x(16)+0.5*x(62)+0.5*x(65)-x(76)+x(79);
             -15*x(15)+15*x(16)+0.5*x(62)+0.5*x(65)+x(76)-x(79);
             5*x(15)-5*x(16)+0.5*x(69)+0.5*x(72)-x(82)+x(85);
             5*x(15)+5*x(16)+0.5*x(69)+0.5*x(72)+x(82)-x(85);
             -x(47)+x(76)-x(80);
             -x(47)-x(76)+x(80);
             -x(48)+x(82)-x(86);
             -x(48)-x(82)+x(86);
             -15*x(17)-15*x(18)+0.5*x(62)+0.5*x(66)-x(76)+x(80);
             -15*x(17)+15*x(18)+0.5*x(62)+0.5*x(66)+x(76)-x(80);
             5*x(17)-5*x(18)+0.5*x(69)+0.5*x(73)-x(82)+x(86);
             5*x(17)+5*x(18)+0.5*x(69)+0.5*x(73)+x(82)-x(86);
             -x(49)+x(77)-x(78);
             -x(49)-x(77)+x(78);
             -x(50)+x(83)-x(84);
             -x(50)-x(83)+x(84);
             -15*x(19)-15*x(20)+0.5*x(63)+0.5*x(64)-x(77)+x(78);
             -15*x(19)+15*x(20)+0.5*x(63)+0.5*x(64)+x(77)-x(78);
             5*x(19)-5*x(20)+0.5*x(70)+0.5*x(71)-x(83)+x(84);
             5*x(19)+5*x(20)+0.5*x(70)+0.5*x(71)+x(83)-x(84);
             -x(51)+x(77)-x(79);
             -x(51)-x(77)+x(79);
             -x(52)+x(83)-x(85);
             -x(52)-x(83)+x(85);
             -15*x(21)-15*x(22)+0.5*x(63)+0.5*x(65)-x(77)+x(79);
             -15*x(21)+15*x(22)+0.5*x(63)+0.5*x(65)+x(77)-x(79);
             5*x(21)-5*x(22)+0.5*x(70)+0.5*x(72)-x(83)+x(85);
             5*x(21)+5*x(22)+0.5*x(70)+0.5*x(72)+x(83)-x(85);
             -x(53)+x(77)-x(80);
             -x(53)-x(77)+x(80);
             -x(54)+x(83)-x(86);
             -x(54)-x(83)+x(86);
             -15*x(23)-15*x(24)+0.5*x(63)+0.5*x(66)-x(77)+x(80);
             -15*x(23)+15*x(24)+0.5*x(63)+0.5*x(66)+x(77)-x(80);
             5*x(23)-5*x(24)+0.5*x(70)+0.5*x(73)-x(83)+x(86);
             5*x(23)+5*x(24)+0.5*x(70)+0.5*x(73)+x(83)-x(86);
             -x(55)+x(78)-x(79);
             -x(55)-x(78)+x(79);
             -x(56)+x(84)-x(85);
             -x(56)-x(84)+x(85);
             -15*x(25)-15*x(26)+0.5*x(64)+0.5*x(65)-x(78)+x(79);
             -15*x(25)+15*x(26)+0.5*x(64)+0.5*x(65)+x(78)-x(79);
             5*x(25)-5*x(26)+0.5*x(71)+0.5*x(72)-x(84)+x(85);
             5*x(25)+5*x(26)+0.5*x(71)+0.5*x(72)+x(84)-x(85);
             -x(57)+x(78)-x(80);
             -x(57)-x(78)+x(80);
             -x(58)+x(84)-x(86);
             -x(58)-x(84)+x(86);
             -15*x(27)-15*x(28)+0.5*x(64)+0.5*x(66)-x(78)+x(80);
             -15*x(27)+15*x(28)+0.5*x(64)+0.5*x(66)+x(78)-x(80);
             5*x(27)-5*x(28)+0.5*x(71)+0.5*x(73)-x(84)+x(86);
             5*x(27)+5*x(28)+0.5*x(71)+0.5*x(73)+x(84)-x(86);
             -x(59)+x(79)-x(80);
             -x(59)-x(79)+x(80);
             -x(60)+x(85)-x(86);
             -x(60)-x(85)+x(86);
             -15*x(29)-15*x(30)+0.5*x(65)+0.5*x(66)-x(79)+x(80);
             -15*x(29)+15*x(30)+0.5*x(65)+0.5*x(66)+x(79)-x(80);
             5*x(29)-5*x(30)+0.5*x(72)+0.5*x(73)-x(85)+x(86);
             5*x(29)+5*x(30)+0.5*x(72)+0.5*x(73)+x(85)-x(86);
             14/x(61)-x(68);
             14/x(68)-x(61);
             10/x(62)-x(69);
             10/x(69)-x(62);
             9/x(63)-x(70);
             9/x(70)-x(63);
             6/x(64)-x(71);
             6/x(71)-x(64);
             10/x(65)-x(72);
             10/x(72)-x(65);
             25/x(66)-x(73);
             25/x(73)-x(66)];
cl = [-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
cu = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,15,5,10,0,0,0,0,0,0,0,0,0,0,0,0]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,2.8,2,1.8,1.2247,2,5,15,1.8708,1.5811,1.5,1.2247,1.5811,2.5,5,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','m6');
opts.sense = 'min';
