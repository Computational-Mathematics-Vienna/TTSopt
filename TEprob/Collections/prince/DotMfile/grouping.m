% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 31-Jan-2014 01:46:38
% Model: grouping

% Objective
fun = @(x)(-17.1+4.37*x(1)+4.56*x(6)+4.26*x(11)+4.56*x(16)+4.3*x(21)+4.46*x(26)+3.84*x(31)+4.57*x(36)+4.26*x(41)+4.37*x(46)+3.49*x(51)+4.43*x(56)+4.48*x(61)+4.01*x(66)+4.29*x(71)+4.42*x(76)+4.23*x(81)+4.42*x(86)+4.23*x(91)+3.49*x(96))*(-17.1+4.37*x(1)+4.56*x(6)+4.26*x(11)+4.56*x(16)+4.3*x(21)+4.46*x(26)+3.84*x(31)+4.57*x(36)+4.26*x(41)+4.37*x(46)+3.49*x(51)+4.43*x(56)+4.48*x(61)+4.01*x(66)+4.29*x(71)+4.42*x(76)+4.23*x(81)+4.42*x(86)+4.23*x(91)+3.49*x(96))+(-20.1+5.23*x(1)+5.74*x(6)+4.93*x(11)+5.74*x(16)+5.19*x(21)+5.46*x(26)+4.65*x(31)+5.27*x(36)+5.57*x(41)+5.12*x(46)+5.73*x(51)+5.45*x(56)+5.42*x(61)+4.05*x(66)+4.26*x(71)+4.58*x(76)+3.94*x(81)+4.18*x(86)+4.18*x(91)+5.89*x(96))*(-20.1+5.23*x(1)+5.74*x(6)+4.93*x(11)+5.74*x(16)+5.19*x(21)+5.46*x(26)+4.65*x(31)+5.27*x(36)+5.57*x(41)+5.12*x(46)+5.73*x(51)+5.45*x(56)+5.42*x(61)+4.05*x(66)+4.26*x(71)+4.58*x(76)+3.94*x(81)+4.18*x(86)+4.18*x(91)+5.89*x(96))+(-17.1+4.37*x(2)+4.56*x(7)+4.26*x(12)+4.56*x(17)+4.3*x(22)+4.46*x(27)+3.84*x(32)+4.57*x(37)+4.26*x(42)+4.37*x(47)+3.49*x(52)+4.43*x(57)+4.48*x(62)+4.01*x(67)+4.29*x(72)+4.42*x(77)+4.23*x(82)+4.42*x(87)+4.23*x(92)+3.49*x(97))*(-17.1+4.37*x(2)+4.56*x(7)+4.26*x(12)+4.56*x(17)+4.3*x(22)+4.46*x(27)+3.84*x(32)+4.57*x(37)+4.26*x(42)+4.37*x(47)+3.49*x(52)+4.43*x(57)+4.48*x(62)+4.01*x(67)+4.29*x(72)+4.42*x(77)+4.23*x(82)+4.42*x(87)+4.23*x(92)+3.49*x(97))+(-20.1+5.23*x(2)+5.74*x(7)+4.93*x(12)+5.74*x(17)+5.19*x(22)+5.46*x(27)+4.65*x(32)+5.27*x(37)+5.57*x(42)+5.12*x(47)+5.73*x(52)+5.45*x(57)+5.42*x(62)+4.05*x(67)+4.26*x(72)+4.58*x(77)+3.94*x(82)+4.18*x(87)+4.18*x(92)+5.89*x(97))*(-20.1+5.23*x(2)+5.74*x(7)+4.93*x(12)+5.74*x(17)+5.19*x(22)+5.46*x(27)+4.65*x(32)+5.27*x(37)+5.57*x(42)+5.12*x(47)+5.73*x(52)+5.45*x(57)+5.42*x(62)+4.05*x(67)+4.26*x(72)+4.58*x(77)+3.94*x(82)+4.18*x(87)+4.18*x(92)+5.89*x(97))+(-17.1+4.37*x(3)+4.56*x(8)+4.26*x(13)+4.56*x(18)+4.3*x(23)+4.46*x(28)+3.84*x(33)+4.57*x(38)+4.26*x(43)+4.37*x(48)+3.49*x(53)+4.43*x(58)+4.48*x(63)+4.01*x(68)+4.29*x(73)+4.42*x(78)+4.23*x(83)+4.42*x(88)+4.23*x(93)+3.49*x(98))*(-17.1+4.37*x(3)+4.56*x(8)+4.26*x(13)+4.56*x(18)+4.3*x(23)+4.46*x(28)+3.84*x(33)+4.57*x(38)+4.26*x(43)+4.37*x(48)+3.49*x(53)+4.43*x(58)+4.48*x(63)+4.01*x(68)+4.29*x(73)+4.42*x(78)+4.23*x(83)+4.42*x(88)+4.23*x(93)+3.49*x(98))+(-20.1+5.23*x(3)+5.74*x(8)+4.93*x(13)+5.74*x(18)+5.19*x(23)+5.46*x(28)+4.65*x(33)+5.27*x(38)+5.57*x(43)+5.12*x(48)+5.73*x(53)+5.45*x(58)+5.42*x(63)+4.05*x(68)+4.26*x(73)+4.58*x(78)+3.94*x(83)+4.18*x(88)+4.18*x(93)+5.89*x(98))*(-20.1+5.23*x(3)+5.74*x(8)+4.93*x(13)+5.74*x(18)+5.19*x(23)+5.46*x(28)+4.65*x(33)+5.27*x(38)+5.57*x(43)+5.12*x(48)+5.73*x(53)+5.45*x(58)+5.42*x(63)+4.05*x(68)+4.26*x(73)+4.58*x(78)+3.94*x(83)+4.18*x(88)+4.18*x(93)+5.89*x(98))+(-17.1+4.37*x(4)+4.56*x(9)+4.26*x(14)+4.56*x(19)+4.3*x(24)+4.46*x(29)+3.84*x(34)+4.57*x(39)+4.26*x(44)+4.37*x(49)+3.49*x(54)+4.43*x(59)+4.48*x(64)+4.01*x(69)+4.29*x(74)+4.42*x(79)+4.23*x(84)+4.42*x(89)+4.23*x(94)+3.49*x(99))*(-17.1+4.37*x(4)+4.56*x(9)+4.26*x(14)+4.56*x(19)+4.3*x(24)+4.46*x(29)+3.84*x(34)+4.57*x(39)+4.26*x(44)+4.37*x(49)+3.49*x(54)+4.43*x(59)+4.48*x(64)+4.01*x(69)+4.29*x(74)+4.42*x(79)+4.23*x(84)+4.42*x(89)+4.23*x(94)+3.49*x(99))+(-20.1+5.23*x(4)+5.74*x(9)+4.93*x(14)+5.74*x(19)+5.19*x(24)+5.46*x(29)+4.65*x(34)+5.27*x(39)+5.57*x(44)+5.12*x(49)+5.73*x(54)+5.45*x(59)+5.42*x(64)+4.05*x(69)+4.26*x(74)+4.58*x(79)+3.94*x(84)+4.18*x(89)+4.18*x(94)+5.89*x(99))*(-20.1+5.23*x(4)+5.74*x(9)+4.93*x(14)+5.74*x(19)+5.19*x(24)+5.46*x(29)+4.65*x(34)+5.27*x(39)+5.57*x(44)+5.12*x(49)+5.73*x(54)+5.45*x(59)+5.42*x(64)+4.05*x(69)+4.26*x(74)+4.58*x(79)+3.94*x(84)+4.18*x(89)+4.18*x(94)+5.89*x(99))+(-17.1+4.37*x(5)+4.56*x(10)+4.26*x(15)+4.56*x(20)+4.3*x(25)+4.46*x(30)+3.84*x(35)+4.57*x(40)+4.26*x(45)+4.37*x(50)+3.49*x(55)+4.43*x(60)+4.48*x(65)+4.01*x(70)+4.29*x(75)+4.42*x(80)+4.23*x(85)+4.42*x(90)+4.23*x(95)+3.49*x(100))*(-17.1+4.37*x(5)+4.56*x(10)+4.26*x(15)+4.56*x(20)+4.3*x(25)+4.46*x(30)+3.84*x(35)+4.57*x(40)+4.26*x(45)+4.37*x(50)+3.49*x(55)+4.43*x(60)+4.48*x(65)+4.01*x(70)+4.29*x(75)+4.42*x(80)+4.23*x(85)+4.42*x(90)+4.23*x(95)+3.49*x(100))+(-20.1+5.23*x(5)+5.74*x(10)+4.93*x(15)+5.74*x(20)+5.19*x(25)+5.46*x(30)+4.65*x(35)+5.27*x(40)+5.57*x(45)+5.12*x(50)+5.73*x(55)+5.45*x(60)+5.42*x(65)+4.05*x(70)+4.26*x(75)+4.58*x(80)+3.94*x(85)+4.18*x(90)+4.18*x(95)+5.89*x(100))*(-20.1+5.23*x(5)+5.74*x(10)+4.93*x(15)+5.74*x(20)+5.19*x(25)+5.46*x(30)+4.65*x(35)+5.27*x(40)+5.57*x(45)+5.12*x(50)+5.73*x(55)+5.45*x(60)+5.42*x(65)+4.05*x(70)+4.26*x(75)+4.58*x(80)+3.94*x(85)+4.18*x(90)+4.18*x(95)+5.89*x(100));

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
ub = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]';

% Constraints
nlcon = @(x)[x(1)+x(6)+x(11)+x(16)+x(21)+x(26)+x(31)+x(36)+x(41)+x(46)+x(51)+x(56)+x(61)+x(66)+x(71)+x(76)+x(81)+x(86)+x(91)+x(96);
             x(2)+x(7)+x(12)+x(17)+x(22)+x(27)+x(32)+x(37)+x(42)+x(47)+x(52)+x(57)+x(62)+x(67)+x(72)+x(77)+x(82)+x(87)+x(92)+x(97);
             x(3)+x(8)+x(13)+x(18)+x(23)+x(28)+x(33)+x(38)+x(43)+x(48)+x(53)+x(58)+x(63)+x(68)+x(73)+x(78)+x(83)+x(88)+x(93)+x(98);
             x(4)+x(9)+x(14)+x(19)+x(24)+x(29)+x(34)+x(39)+x(44)+x(49)+x(54)+x(59)+x(64)+x(69)+x(74)+x(79)+x(84)+x(89)+x(94)+x(99);
             x(5)+x(10)+x(15)+x(20)+x(25)+x(30)+x(35)+x(40)+x(45)+x(50)+x(55)+x(60)+x(65)+x(70)+x(75)+x(80)+x(85)+x(90)+x(95)+x(100);
             x(1)+x(2)+x(3)+x(4)+x(5);
             x(6)+x(7)+x(8)+x(9)+x(10);
             x(11)+x(12)+x(13)+x(14)+x(15);
             x(16)+x(17)+x(18)+x(19)+x(20);
             x(21)+x(22)+x(23)+x(24)+x(25);
             x(26)+x(27)+x(28)+x(29)+x(30);
             x(31)+x(32)+x(33)+x(34)+x(35);
             x(36)+x(37)+x(38)+x(39)+x(40);
             x(41)+x(42)+x(43)+x(44)+x(45);
             x(46)+x(47)+x(48)+x(49)+x(50);
             x(51)+x(52)+x(53)+x(54)+x(55);
             x(56)+x(57)+x(58)+x(59)+x(60);
             x(61)+x(62)+x(63)+x(64)+x(65);
             x(66)+x(67)+x(68)+x(69)+x(70);
             x(71)+x(72)+x(73)+x(74)+x(75);
             x(76)+x(77)+x(78)+x(79)+x(80);
             x(81)+x(82)+x(83)+x(84)+x(85);
             x(86)+x(87)+x(88)+x(89)+x(90);
             x(91)+x(92)+x(93)+x(94)+x(95);
             x(96)+x(97)+x(98)+x(99)+x(100);
             x(1)*(-1+x(1));
             x(2)*(-1+x(2));
             x(3)*(-1+x(3));
             x(4)*(-1+x(4));
             x(5)*(-1+x(5));
             x(6)*(-1+x(6));
             x(7)*(-1+x(7));
             x(8)*(-1+x(8));
             x(9)*(-1+x(9));
             x(10)*(-1+x(10));
             x(11)*(-1+x(11));
             x(12)*(-1+x(12));
             x(13)*(-1+x(13));
             x(14)*(-1+x(14));
             x(15)*(-1+x(15));
             x(16)*(-1+x(16));
             x(17)*(-1+x(17));
             x(18)*(-1+x(18));
             x(19)*(-1+x(19));
             x(20)*(-1+x(20));
             x(21)*(-1+x(21));
             x(22)*(-1+x(22));
             x(23)*(-1+x(23));
             x(24)*(-1+x(24));
             x(25)*(-1+x(25));
             x(26)*(-1+x(26));
             x(27)*(-1+x(27));
             x(28)*(-1+x(28));
             x(29)*(-1+x(29));
             x(30)*(-1+x(30));
             x(31)*(-1+x(31));
             x(32)*(-1+x(32));
             x(33)*(-1+x(33));
             x(34)*(-1+x(34));
             x(35)*(-1+x(35));
             x(36)*(-1+x(36));
             x(37)*(-1+x(37));
             x(38)*(-1+x(38));
             x(39)*(-1+x(39));
             x(40)*(-1+x(40));
             x(41)*(-1+x(41));
             x(42)*(-1+x(42));
             x(43)*(-1+x(43));
             x(44)*(-1+x(44));
             x(45)*(-1+x(45));
             x(46)*(-1+x(46));
             x(47)*(-1+x(47));
             x(48)*(-1+x(48));
             x(49)*(-1+x(49));
             x(50)*(-1+x(50));
             x(51)*(-1+x(51));
             x(52)*(-1+x(52));
             x(53)*(-1+x(53));
             x(54)*(-1+x(54));
             x(55)*(-1+x(55));
             x(56)*(-1+x(56));
             x(57)*(-1+x(57));
             x(58)*(-1+x(58));
             x(59)*(-1+x(59));
             x(60)*(-1+x(60));
             x(61)*(-1+x(61));
             x(62)*(-1+x(62));
             x(63)*(-1+x(63));
             x(64)*(-1+x(64));
             x(65)*(-1+x(65));
             x(66)*(-1+x(66));
             x(67)*(-1+x(67));
             x(68)*(-1+x(68));
             x(69)*(-1+x(69));
             x(70)*(-1+x(70));
             x(71)*(-1+x(71));
             x(72)*(-1+x(72));
             x(73)*(-1+x(73));
             x(74)*(-1+x(74));
             x(75)*(-1+x(75));
             x(76)*(-1+x(76));
             x(77)*(-1+x(77));
             x(78)*(-1+x(78));
             x(79)*(-1+x(79));
             x(80)*(-1+x(80));
             x(81)*(-1+x(81));
             x(82)*(-1+x(82));
             x(83)*(-1+x(83));
             x(84)*(-1+x(84));
             x(85)*(-1+x(85));
             x(86)*(-1+x(86));
             x(87)*(-1+x(87));
             x(88)*(-1+x(88));
             x(89)*(-1+x(89));
             x(90)*(-1+x(90));
             x(91)*(-1+x(91));
             x(92)*(-1+x(92));
             x(93)*(-1+x(93));
             x(94)*(-1+x(94));
             x(95)*(-1+x(95));
             x(96)*(-1+x(96));
             x(97)*(-1+x(97));
             x(98)*(-1+x(98));
             x(99)*(-1+x(99));
             x(100)*(-1+x(100))];
cl = [4,4,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
cu = [4,4,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','grouping');
opts.sense = 'min';
