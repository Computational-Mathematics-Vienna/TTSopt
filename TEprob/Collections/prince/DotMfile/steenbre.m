% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 01-Feb-2014 15:55:52
% Model: steenbre

% Objective
fun = @(x)0.35*x(505)^0.5+(0.35+0.35*(x(541)/x(505))^2)*x(541)+0.4*x(506)^0.5+(0.4+0.4*(x(542)/x(506))^2)*x(542)+0.3*x(507)^0.5+(0.3+0.3*(x(543)/x(507))^2)*x(543)+0.35*x(508)^0.5+(0.35+0.35*(x(544)/x(508))^2)*x(544)+(-1999.99+x(509))^0.5+(1+(x(545)/x(509))^2)*x(545)+0.15*x(510)^0.5+(0.15+0.15*(x(546)/x(510))^2)*x(546)+0.55*x(511)^0.5+(0.55+0.55*(x(547)/x(511))^2)*x(547)+0.4*x(512)^0.5+(0.4+0.4*(x(548)/x(512))^2)*x(548)+x(513)^0.5+(1+(x(549)/x(513))^2)*x(549)+0.25*x(514)^0.5+(0.25+0.25*(x(550)/x(514))^2)*x(550)+0.6*x(515)^0.5+(0.6+0.6*(x(551)/x(515))^2)*x(551)+(-1999.99+x(516))^0.5+(1+(x(552)/x(516))^2)*x(552)+0.35*x(517)^0.5+(0.35+0.35*(x(553)/x(517))^2)*x(553)+0.55*x(518)^0.5+(0.55+0.55*(x(554)/x(518))^2)*x(554)+0.15*x(519)^0.5+(0.15+0.15*(x(555)/x(519))^2)*x(555)+x(520)^0.5+(1+(x(556)/x(520))^2)*x(556)+0.4*x(521)^0.5+(0.4+0.4*(x(557)/x(521))^2)*x(557)+0.6*x(522)^0.5+(0.6+0.6*(x(558)/x(522))^2)*x(558)+0.25*x(523)^0.5+(0.25+0.25*(x(559)/x(523))^2)*x(559)+0.35*x(524)^0.5+(0.35+0.35*(x(560)/x(524))^2)*x(560)+0.4*x(525)^0.5+(0.4+0.4*(x(561)/x(525))^2)*x(561)+0.3*x(526)^0.5+(0.3+0.3*(x(562)/x(526))^2)*x(562)+0.3*x(527)^0.5+(0.3+0.3*(x(563)/x(527))^2)*x(563)+0.15*x(528)^0.5+(0.15+0.15*(x(564)/x(528))^2)*x(564)+0.25*x(529)^0.5+(0.25+0.25*(x(565)/x(529))^2)*x(565)+0.5*x(530)^0.5+(0.5+0.5*(x(566)/x(530))^2)*x(566)+0.55*x(531)^0.5+(0.55+0.55*(x(567)/x(531))^2)*x(567)+0.6*x(532)^0.5+(0.6+0.6*(x(568)/x(532))^2)*x(568)+0.55*x(533)^0.5+(0.55+0.55*(x(569)/x(533))^2)*x(569)+0.6*x(534)^0.5+(0.6+0.6*(x(570)/x(534))^2)*x(570)+0.5*x(535)^0.5+(0.5+0.5*(x(571)/x(535))^2)*x(571)+0.5*x(536)^0.5+(0.5+0.5*(x(572)/x(536))^2)*x(572)+0.15*x(537)^0.5+(0.15+0.15*(x(573)/x(537))^2)*x(573)+0.25*x(538)^0.5+(0.25+0.25*(x(574)/x(538))^2)*x(574)+0.3*x(539)^0.5+(0.3+0.3*(x(575)/x(539))^2)*x(575)+0.5*x(540)^0.5+(0.5+0.5*(x(576)/x(540))^2)*x(576);

% Bounds
lb = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01,0.01,0.01,0.01,2000,0.01,0.01,0.01,0.01,0.01,0.01,2000,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[-x(1)-x(37)-x(73)-x(109)-x(145)-x(181)-x(217)-x(253)-x(289)-x(325)-x(361)-x(397)-x(433)-x(469)+x(541);
             -x(2)-x(38)-x(74)-x(110)-x(146)-x(182)-x(218)-x(254)-x(290)-x(326)-x(362)-x(398)-x(434)-x(470)+x(542);
             -x(3)-x(39)-x(75)-x(111)-x(147)-x(183)-x(219)-x(255)-x(291)-x(327)-x(363)-x(399)-x(435)-x(471)+x(543);
             -x(4)-x(40)-x(76)-x(112)-x(148)-x(184)-x(220)-x(256)-x(292)-x(328)-x(364)-x(400)-x(436)-x(472)+x(544);
             -x(5)-x(41)-x(77)-x(113)-x(149)-x(185)-x(221)-x(257)-x(293)-x(329)-x(365)-x(401)-x(437)-x(473)+x(545);
             -x(6)-x(42)-x(78)-x(114)-x(150)-x(186)-x(222)-x(258)-x(294)-x(330)-x(366)-x(402)-x(438)-x(474)+x(546);
             -x(7)-x(43)-x(79)-x(115)-x(151)-x(187)-x(223)-x(259)-x(295)-x(331)-x(367)-x(403)-x(439)-x(475)+x(547);
             -x(8)-x(44)-x(80)-x(116)-x(152)-x(188)-x(224)-x(260)-x(296)-x(332)-x(368)-x(404)-x(440)-x(476)+x(548);
             -x(9)-x(45)-x(81)-x(117)-x(153)-x(189)-x(225)-x(261)-x(297)-x(333)-x(369)-x(405)-x(441)-x(477)+x(549);
             -x(10)-x(46)-x(82)-x(118)-x(154)-x(190)-x(226)-x(262)-x(298)-x(334)-x(370)-x(406)-x(442)-x(478)+x(550);
             -x(11)-x(47)-x(83)-x(119)-x(155)-x(191)-x(227)-x(263)-x(299)-x(335)-x(371)-x(407)-x(443)-x(479)+x(551);
             -x(12)-x(48)-x(84)-x(120)-x(156)-x(192)-x(228)-x(264)-x(300)-x(336)-x(372)-x(408)-x(444)-x(480)+x(552);
             -x(13)-x(49)-x(85)-x(121)-x(157)-x(193)-x(229)-x(265)-x(301)-x(337)-x(373)-x(409)-x(445)-x(481)+x(553);
             -x(14)-x(50)-x(86)-x(122)-x(158)-x(194)-x(230)-x(266)-x(302)-x(338)-x(374)-x(410)-x(446)-x(482)+x(554);
             -x(15)-x(51)-x(87)-x(123)-x(159)-x(195)-x(231)-x(267)-x(303)-x(339)-x(375)-x(411)-x(447)-x(483)+x(555);
             -x(16)-x(52)-x(88)-x(124)-x(160)-x(196)-x(232)-x(268)-x(304)-x(340)-x(376)-x(412)-x(448)-x(484)+x(556);
             -x(17)-x(53)-x(89)-x(125)-x(161)-x(197)-x(233)-x(269)-x(305)-x(341)-x(377)-x(413)-x(449)-x(485)+x(557);
             -x(18)-x(54)-x(90)-x(126)-x(162)-x(198)-x(234)-x(270)-x(306)-x(342)-x(378)-x(414)-x(450)-x(486)+x(558);
             -x(19)-x(55)-x(91)-x(127)-x(163)-x(199)-x(235)-x(271)-x(307)-x(343)-x(379)-x(415)-x(451)-x(487)+x(559);
             -x(20)-x(56)-x(92)-x(128)-x(164)-x(200)-x(236)-x(272)-x(308)-x(344)-x(380)-x(416)-x(452)-x(488)+x(560);
             -x(21)-x(57)-x(93)-x(129)-x(165)-x(201)-x(237)-x(273)-x(309)-x(345)-x(381)-x(417)-x(453)-x(489)+x(561);
             -x(22)-x(58)-x(94)-x(130)-x(166)-x(202)-x(238)-x(274)-x(310)-x(346)-x(382)-x(418)-x(454)-x(490)+x(562);
             -x(23)-x(59)-x(95)-x(131)-x(167)-x(203)-x(239)-x(275)-x(311)-x(347)-x(383)-x(419)-x(455)-x(491)+x(563);
             -x(24)-x(60)-x(96)-x(132)-x(168)-x(204)-x(240)-x(276)-x(312)-x(348)-x(384)-x(420)-x(456)-x(492)+x(564);
             -x(25)-x(61)-x(97)-x(133)-x(169)-x(205)-x(241)-x(277)-x(313)-x(349)-x(385)-x(421)-x(457)-x(493)+x(565);
             -x(26)-x(62)-x(98)-x(134)-x(170)-x(206)-x(242)-x(278)-x(314)-x(350)-x(386)-x(422)-x(458)-x(494)+x(566);
             -x(27)-x(63)-x(99)-x(135)-x(171)-x(207)-x(243)-x(279)-x(315)-x(351)-x(387)-x(423)-x(459)-x(495)+x(567);
             -x(28)-x(64)-x(100)-x(136)-x(172)-x(208)-x(244)-x(280)-x(316)-x(352)-x(388)-x(424)-x(460)-x(496)+x(568);
             -x(29)-x(65)-x(101)-x(137)-x(173)-x(209)-x(245)-x(281)-x(317)-x(353)-x(389)-x(425)-x(461)-x(497)+x(569);
             -x(30)-x(66)-x(102)-x(138)-x(174)-x(210)-x(246)-x(282)-x(318)-x(354)-x(390)-x(426)-x(462)-x(498)+x(570);
             -x(31)-x(67)-x(103)-x(139)-x(175)-x(211)-x(247)-x(283)-x(319)-x(355)-x(391)-x(427)-x(463)-x(499)+x(571);
             -x(32)-x(68)-x(104)-x(140)-x(176)-x(212)-x(248)-x(284)-x(320)-x(356)-x(392)-x(428)-x(464)-x(500)+x(572);
             -x(33)-x(69)-x(105)-x(141)-x(177)-x(213)-x(249)-x(285)-x(321)-x(357)-x(393)-x(429)-x(465)-x(501)+x(573);
             -x(34)-x(70)-x(106)-x(142)-x(178)-x(214)-x(250)-x(286)-x(322)-x(358)-x(394)-x(430)-x(466)-x(502)+x(574);
             -x(35)-x(71)-x(107)-x(143)-x(179)-x(215)-x(251)-x(287)-x(323)-x(359)-x(395)-x(431)-x(467)-x(503)+x(575);
             -x(36)-x(72)-x(108)-x(144)-x(180)-x(216)-x(252)-x(288)-x(324)-x(360)-x(396)-x(432)-x(468)-x(504)+x(576);
             x(505);
             x(506);
             x(507);
             x(508);
             x(509);
             x(510);
             x(511);
             x(512);
             x(513);
             x(514);
             x(515);
             x(516);
             x(517);
             x(518);
             x(519);
             x(520);
             x(521);
             x(522);
             x(523);
             x(524);
             x(525);
             x(526);
             x(527);
             x(528);
             x(529);
             x(530);
             x(531);
             x(532);
             x(533);
             x(534);
             x(535);
             x(536);
             x(537);
             x(538);
             x(539);
             x(540)];
cl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01,0.01,0.01,0.01,2000,0.01,0.01,0.01,0.01,0.01,0.01,2000,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01]';
cu = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Variables (C = continuous, B = binary, I = integer)
xtype

% Starting Guess
x0 = [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,2000.1,0.1,0.1,0.1,0.1,0.1,0.1,2000.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','steenbre');
opts.sense = 'min';
