% This BARON input file was generated by the MATLAB/BARON interface.
% The BARON/MATLAB interface was developed by J. Currie.  The interface
% is provided free of charge and with no warranties from The Optimization
% Firm, http://www.minlp.com.
% Interface version: v1.51 [17-Dec-2013]
% File generated: 30-Jan-2014 20:53:52
% Model: coshfun

% Objective
fun = @(x)x(61);

% Bounds
lb = [-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-Inf]';
ub = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf]';

% Constraints
nlcon = @(x)[-(x(3)*x(3)+0.5*(exp(x(2))+exp(-x(2)))+2*x(1)*x(1)*x(3)-2*x(3))+x(6)+x(61);
             -(x(6)*x(6)+0.5*(exp(x(5))+exp(-x(5)))+2*x(4)*x(4)*x(6)-2*x(6))-x(1)+x(9)+x(61);
             -(x(9)*x(9)+0.5*(exp(x(8))+exp(-x(8)))+2*x(7)*x(7)*x(9)-2*x(9))-x(4)+x(12)+x(61);
             -(x(12)*x(12)+0.5*(exp(x(11))+exp(-x(11)))+2*x(10)*x(10)*x(12)-2*x(12))-x(7)+x(15)+x(61);
             -(x(15)*x(15)+0.5*(exp(x(14))+exp(-x(14)))+2*x(13)*x(13)*x(15)-2*x(15))-x(10)+x(18)+x(61);
             -(x(18)*x(18)+0.5*(exp(x(17))+exp(-x(17)))+2*x(16)*x(16)*x(18)-2*x(18))-x(13)+x(21)+x(61);
             -(x(21)*x(21)+0.5*(exp(x(20))+exp(-x(20)))+2*x(19)*x(19)*x(21)-2*x(21))-x(16)+x(24)+x(61);
             -(x(24)*x(24)+0.5*(exp(x(23))+exp(-x(23)))+2*x(22)*x(22)*x(24)-2*x(24))-x(19)+x(27)+x(61);
             -(x(27)*x(27)+0.5*(exp(x(26))+exp(-x(26)))+2*x(25)*x(25)*x(27)-2*x(27))-x(22)+x(30)+x(61);
             -(x(30)*x(30)+0.5*(exp(x(29))+exp(-x(29)))+2*x(28)*x(28)*x(30)-2*x(30))-x(25)+x(33)+x(61);
             -(x(33)*x(33)+0.5*(exp(x(32))+exp(-x(32)))+2*x(31)*x(31)*x(33)-2*x(33))-x(28)+x(36)+x(61);
             -(x(36)*x(36)+0.5*(exp(x(35))+exp(-x(35)))+2*x(34)*x(34)*x(36)-2*x(36))-x(31)+x(39)+x(61);
             -(x(39)*x(39)+0.5*(exp(x(38))+exp(-x(38)))+2*x(37)*x(37)*x(39)-2*x(39))-x(34)+x(42)+x(61);
             -(x(42)*x(42)+0.5*(exp(x(41))+exp(-x(41)))+2*x(40)*x(40)*x(42)-2*x(42))-x(37)+x(45)+x(61);
             -(x(45)*x(45)+0.5*(exp(x(44))+exp(-x(44)))+2*x(43)*x(43)*x(45)-2*x(45))-x(40)+x(48)+x(61);
             -(x(48)*x(48)+0.5*(exp(x(47))+exp(-x(47)))+2*x(46)*x(46)*x(48)-2*x(48))-x(43)+x(51)+x(61);
             -(x(51)*x(51)+0.5*(exp(x(50))+exp(-x(50)))+2*x(49)*x(49)*x(51)-2*x(51))-x(46)+x(54)+x(61);
             -(x(54)*x(54)+0.5*(exp(x(53))+exp(-x(53)))+2*x(52)*x(52)*x(54)-2*x(54))-x(49)+x(57)+x(61);
             -(x(57)*x(57)+0.5*(exp(x(56))+exp(-x(56)))+2*x(55)*x(55)*x(57)-2*x(57))-x(52)+x(60)+x(61);
             -(x(60)*x(60)+0.5*(exp(x(59))+exp(-x(59)))+2*x(58)*x(58)*x(60)-2*x(60))-x(55)+x(61);
             -x(61)+x(62)];
cl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]';
cu = [Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,Inf,0]';

% Variables (C = continuous, B = binary, I = integer)
xtype = 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC';

% Starting Guess
x0 = [NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN]';

% Options
opts = struct('probname','coshfun');
opts.sense = 'min';
